{
    "CreationTimeUnixTimeInMs": 1560351300805,
    "Creator": "Admin",
    "DefaultResultValue": "",
    "Description": "List all endpoints.",
    "DynamicResultsMetadata": [
        {
            "ResultExample": "[{\"domain\": \"\", \"updated_at\": \"2019-05-30T01:40:21.126499+00:00\", \"id\": \"db33d864-7d58-4d85-9d2d-1a98a101995d\", \"display_operating_system\": \"Windows 7 (SP1)\", \"hostname\": \"ip-AC170169\", \"mac_address\": \"12:ff:3d:d0:85:82\", \"isolation_updated_at\": \"\", \"status\": \"monitored\", \"ad_distinguished_name\": \"\", \"ad_hostname\": \"\", \"tags\": [], \"isolation_request_status\": \"\", \"alert_count\": 72, \"investigation_count\": 0, \"groups\": [], \"sensors\": [{\"status\": \"monitored\", \"sensor_version\": \"3.51.10\", \"policy_status\": \"successful\", \"policy_name\": \"POC-Lab\", \"sensor_type\": \"hunt\", \"id\": \"ec17f7bb-1d63-536a-b694-ca066cc2572e\", \"policy_id\": \"d31f0192-b8e2-49ae-ae54-041376183b7f\"}], \"ip_address\": \"172.23.1.105\", \"is_isolated\": \"false\", \"operating_system\": \"Windows 6.1 Service Pack 1\", \"name\": \"ip-AC170169\", \"status_changed_at\": \"2019-05-30T01:40:18.200770+00:00\", \"core_os\": \"windows\", \"created_at\": \"2019-05-30T01:36:43.761600+00:00\", \"error\": [{\"msg\": \"Installer failure - Execution failed for (http://172.23.1.105:5985/wsman)\\n\", \"deployment_id\": \"90C2BAA6-B38B-4037-9A9E-7C8628E8D7D6\", \"code\": 1001, \"ts\": 1559180421.125456}], \"machine_id\": \"4f1adabb-17c4-e39e-caa7-7900562d0b51\"}]",
            "ResultName": "JsonResult"
        }
    ],
    "Id": -1,
    "IntegrationIdentifier": "Endgame",
    "IsCustom": false,
    "IsEnabled": true,
    "ModificationTimeUnixTimeInMs": 1560351300805,
    "Name": "Get Endpoints",
    "Parameters": [],
    "Script": "import sys\nfrom SiemplifyAction import SiemplifyAction\nfrom EndgameManager import EndgameManager, IOC_USER_SEARCH\nfrom SiemplifyDataModel import EntityTypes\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_INPROGRESS\n\nPROVIDER = 'Endgame'\nACTION_NAME = 'Endgame - Hunt User'\n\n\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = ACTION_NAME\n    conf = siemplify.get_configuration(PROVIDER)\n    api_root = conf['API Root']\n    username = conf['Username']\n    password = conf['Password']\n    use_ssl = conf.get('Verify SSL', 'False').lower() == 'true'\n    egm = EndgameManager(api_root, username=username, password=password, use_ssl=use_ssl)\n\n    siemplify.LOGGER.info(\"Action START\")\n    investigation_name = siemplify.parameters.get(\"Investigation Name\", \"Siemplify User Hunt Investigation API\")\n    endpoints = []\n    for entity in siemplify.target_entities:\n        if entity.entity_type == EntityTypes.HOSTNAME:\n            endpoints.append(entity.identifier)\n    core_os = siemplify.parameters.get(\"Endpoints Core OS\", \"windows\")\n    find_username = siemplify.parameters.get(\"Find Username\")\n    domain_name = siemplify.parameters.get(\"Domain Name\")\n\n    investigation_id = ''\n    try:\n        siemplify.LOGGER.info(\"Searching for users: {0}\".format(find_username))\n        # By default, the investigation is assigned to the login user\n        investigation_id = egm.create_investigation(task_name=investigation_name, assign_user=username,\n                                                    endpoints=endpoints, ioc_search_type=IOC_USER_SEARCH,\n                                                    core_os=core_os,\n                                                    find_username=find_username, domain_name=domain_name)\n        siemplify.LOGGER.info(\"Successfully Create investigation with ID {0}\".format(investigation_id))\n\n    except Exception as err:\n        error_message = 'Error while searching for user(s): {0}, Error: {1}'.format(find_username, err.message)\n        siemplify.LOGGER.error(error_message)\n        siemplify.LOGGER.execption(err)\n\n    siemplify.LOGGER.info(\"Sync Part END !!!\")\n    siemplify.end(\"\", investigation_id, EXECUTION_STATE_INPROGRESS)\n\n\ndef fetch_scan_report_async():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = ACTION_NAME\n    conf = siemplify.get_configuration(PROVIDER)\n    api_root = conf['API Root']\n    username = conf['Username']\n    password = conf['Password']\n    use_ssl = conf.get('Verify SSL', 'False').lower() == 'true'\n    egm = EndgameManager(api_root, username=username, password=password, use_ssl=use_ssl)\n    siemplify.LOGGER.info(\"ASync Part START !!!\")\n\n    # Extract investigation ID\n    investigation_id = siemplify.parameters[\"additional_data\"]\n    json_results = []\n    output_message = \"\"\n    errors_flag = False\n\n    try:\n        # check if analysis completed\n        is_completed = egm.get_investigation_status(investigation_id)\n        if is_completed:\n            # is_ready = True, fetch the report\n            siemplify.LOGGER.info(\"Retrieving investigation ID results: {0}\".format(investigation_id))\n            hunt_results = egm.retrieve_investigation_results(investigation_id)\n            for hunt_id, results in hunt_results.iteritems():\n                for hunt in results['Results']:\n                    json_results.append(hunt)\n\n        else:\n            siemplify.LOGGER.info(\"Continuing...Investigation NOT completed !\")\n            siemplify.end(output_message, investigation_id, EXECUTION_STATE_INPROGRESS)\n\n    except Exception as err:\n        error_message = \"Error while retrieving investigation ID: {0}, Error: {1}\".format(\n            investigation_id, err.message)\n        siemplify.LOGGER.error(error_message)\n        siemplify.LOGGER.exception(err)\n        errors_flag = True\n\n    if json_results:\n        output_message = \"Retrieved results from the following hunts in Endgame: {0}\".format(investigation_id)\n    else:\n        output_message = \"There are no results for your investigation\"\n\n    if errors_flag:\n        output_message += \"\\n Errors occurred, check log for more information\"\n\n    siemplify.LOGGER.info(\"Action END !!!\")\n    siemplify.result.add_result_json(json_results)\n    # logout\n    egm.logout()\n    siemplify.end(output_message, 'true', EXECUTION_STATE_COMPLETED)\n\n\nif __name__ == \"__main__\":\n    if len(sys.argv) < 3 or sys.argv[2] == 'True':\n        main()\n    else:\n        fetch_scan_report_async()\n",
    "ScriptResultName": "endpoints_count",
    "TimeoutSeconds": 600,
    "Version": 2.0,
    "SimulationDataJson": "{\"Entities\": []}"
}