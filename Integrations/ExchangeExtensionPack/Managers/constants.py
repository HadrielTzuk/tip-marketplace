PROVIDER_NAME = "Exchange Extension Pack"

# Actions
PING_SCRIPT_NAME = "{} - Ping".format(PROVIDER_NAME)
RUN_COMPLIANCE_SEARCH_SCRIPT_NAME = "{} - Run Compliance Search".format(PROVIDER_NAME)
FETCH_COMPLIANCE_SEARCH_RESULTS_SCRIPT_NAME = "{} - Fetch Compliance Search Results".format(PROVIDER_NAME)
PURGE_COMPLIANCE_SEARCH_RESULTS_SCRIPT_NAME = "{} - Purge Compliance Search Results".format(PROVIDER_NAME)
DELETE_COMPLIANCE_SEARCH_SCRIPT_NAME = "{} - Delete Compliance Search".format(PROVIDER_NAME)
ADD_SENDERS_TO_EXCHANGE_SIEMPLIFY_MAIL_FLOW_RULE_SCRIPT_NAME = "{} - Add Senders to Exchange-Siemplify Mail Flow Rule".format(PROVIDER_NAME)
REMOVE_SENDERS_FROM_EXCHANGE_SIEMPLIFY_MAIL_FLOW_RULES_SCRIPT_NAME = "{} - Remove Senders from Exchange-Siemplify Mail Flow Rules".format(PROVIDER_NAME)
ADD_DOMAINS_TO_EXCHANGE_SIEMPLIFY_MAIL_FLOW_RULES_SCRIPT_NAME = "{} - Add Domains to Exchange-Siemplify Mail Flow Rules".format(PROVIDER_NAME)
REMOVE_DOMAINS_FROM_EXCHANGE_SIEMPLIFY_MAIL_FLOW_RULES_SCRIPT_NAME = "{} - Remove Domains from Exchange-Siemplify Mail Flow Rules".format(PROVIDER_NAME)
LIST_EXCHANGE_SIEMPLIFY_MAIL_FLOW_RULES_SCRIPT_NAME = "{} - List Exchange-Siemplify Mail Flow Rules".format(PROVIDER_NAME)
DELETE_EXCHANGE_SIEMPLIFY_MAIL_FLOW_RULES_SCRIPT_NAME = "{} - Delete Exchange-Siemplify Mail Flow Rules".format(PROVIDER_NAME)


# Commands
COMMANDS = {
    "test_connectivity_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; Import-PSSession $Session; Remove-PSSession $Session}}",
    "test_connectivity_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic –AllowRedirection; Import-PSSession $Session; Remove-PSSession $Session",
    "create_compliance_search_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; Import-PSSession $Session; New-ComplianceSearch \"{compliance_search_name}\" -ExchangeLocation {location} -ContentMatchQuery \"{query}\" -Force; Start-ComplianceSearch \"{compliance_search_name}\"; Remove-PSSession $Session}}",
    "create_compliance_search_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic –AllowRedirection; Import-PSSession $Session; New-ComplianceSearch \"{compliance_search_name}\" -ExchangeLocation {location} -ContentMatchQuery \"{query}\" -Force; Start-ComplianceSearch \"{compliance_search_name}\"; Remove-PSSession $Session",
    "get_compliance_search_status_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; $import = Import-PSSession $Session; Get-ComplianceSearch \"{compliance_search_name}\" | ConvertTo-Json; Remove-PSSession $Session}} | Out-File -FilePath {file_name}",
    "get_compliance_search_status_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic –AllowRedirection; Import-PSSession $Session; Get-ComplianceSearch \"{compliance_search_name}\" | ConvertTo-Json | Out-File -FilePath {file_name}; Remove-PSSession $Session",
    "create_compliance_search_preview_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; Import-PSSession $Session; New-ComplianceSearchAction -SearchName \"{compliance_search_name}\"  -Preview; Remove-PSSession $Session}}",
    "create_compliance_search_preview_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic –AllowRedirection; Import-PSSession $Session; New-ComplianceSearchAction -SearchName \"{compliance_search_name}\"  -Preview; Remove-PSSession $Session",
    "get_compliance_search_preview_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; $import = Import-PSSession $Session; Get-ComplianceSearchAction  -Identity \"{compliance_search_name}_Preview\" -Details -IncludeCredential | ConvertTo-Json | Format-List; Remove-PSSession $Session}} | Out-File -FilePath {file_name}",
    "get_compliance_search_preview_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic –AllowRedirection; Import-PSSession $Session; Get-ComplianceSearchAction  -Identity \"{compliance_search_name}_Preview\" -Details -IncludeCredential | ConvertTo-Json | Out-File -FilePath {file_name} | Format-List; Remove-PSSession $Session",
    "remove_compliance_search_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; Import-PSSession $Session; Remove-ComplianceSearch -Confirm:$false \"{compliance_search_name}\"; Remove-PSSession $Session}}",
    "remove_compliance_search_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic –AllowRedirection; Import-PSSession $Session; Remove-ComplianceSearch -Confirm:$false \"{compliance_search_name}\"; Remove-PSSession $Session",
    "create_compliance_search_purge_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; Import-PSSession $Session; New-ComplianceSearchAction -Confirm:$false -SearchName \"{compliance_search_name}\" -Purge; Remove-PSSession $Session}}",
    "create_compliance_search_purge_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic –AllowRedirection; Import-PSSession $Session; New-ComplianceSearchAction -Confirm:$false -SearchName \"{compliance_search_name}\"  -Purge -PurgeType {state}; Remove-PSSession $Session",
    "get_compliance_search_purge_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; $import = Import-PSSession $Session; Get-ComplianceSearchAction  -Identity \"{compliance_search_name}_Purge\" -Details -IncludeCredential | ConvertTo-Json | Format-List; Remove-PSSession $Session}} | Out-File -FilePath {file_name}",
    "get_compliance_search_purge_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic –AllowRedirection; Import-PSSession $Session; Get-ComplianceSearchAction  -Identity \"{compliance_search_name}_Purge\" -Details -IncludeCredential | ConvertTo-Json | Out-File -FilePath {file_name} | Format-List; Remove-PSSession $Session",
    "get_mail_flow_rules_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; $import = Import-PSSession $Session; Get-TransportRule | ConvertTo-Json; Remove-PSSession $Session}} | Out-File -FilePath {file_name}",
    "get_mail_flow_rules_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic; Import-PSSession $Session; Get-TransportRule | ConvertTo-Json | Out-File -FilePath {file_name}; Remove-PSSession $Session",
    "create_mail_flow_rule_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; $import = Import-PSSession $Session; New-TransportRule -Name \"{rule_name}\" {condition} {items} {action}; Remove-PSSession $Session}}",
    "create_mail_flow_rule_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic; Import-PSSession $Session; New-TransportRule -Name \"{rule_name}\" {condition} {items} {action}; Remove-PSSession $Session",
    "update_mail_flow_rule_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; $import = Import-PSSession $Session; Set-TransportRule \"{rule_name}\" {condition} {items}; Remove-PSSession $Session}}",
    "update_mail_flow_rule_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic; Import-PSSession $Session; Set-TransportRule \"{rule_name}\" {condition} {items}; Remove-PSSession $Session",
    "delete_mail_flow_rule_on_prem": "$SiteServer = \"{server_address}\"; $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $session = New-PSSession -computername {server_address} -credential $credential -Authentication Negotiate; Invoke-Command -Session $session -Scriptblock {{ $securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{domain}\\{username}\",$securePassword); $pso = new-pssessionoption -skipcacheck -SkipCNCheck -SkipRevocationCheck; $Session= New-PSSession -Configuration Microsoft.Exchange -ConnectionUri https://{server_address}/PowerShell/  -Credential $credential -Authentication Basic -AllowRedirection -Sessionoption $pso; $import = Import-PSSession $Session; Remove-TransportRule -Confirm:$false \"{rule_name}\"; Remove-PSSession $Session}}",
    "delete_mail_flow_rule_o365": "$securePassword = ConvertTo-SecureString \"{password}\" -AsPlainText -force; $credential = New-Object System.Management.Automation.PsCredential(\"{username}\",$securePassword); $Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri {connection_uri} -Credential $credential -Authentication Basic; Import-PSSession $Session; Remove-TransportRule -Confirm:$false \"{rule_name}\"; Remove-PSSession $Session"
}


POWERSHALL_COMMAND = "pwsh"
ERROR_TEXTS = {
    "gss_failure": "GSS failure",
    "powershell": f"No such file or directory: '{POWERSHALL_COMMAND}'",
    "no_results": "didn't return any results",
    "not_found": ["cannot be found", "couldn't be found"],
    "already_exists": "already exists",
    "session_error": "Cannot validate argument on parameter 'Session'",
    "invalid_query": "The property keyword isn't supported",
}

COMPLETED_STATUS = "Completed"
RESULT_FILE_NAME = "result.json"
DATETIME_FORMAT = "%Y-%m-%dT%H:%M:%S"
SPECIAL_CHARACTERS = ["'", '"']

DELETE_STATE = {
    "hard_delete": "HardDelete",
    "soft_delete": "SoftDelete"
}

PARAMETERS_DEFAULT_DELIMITER = ","

# Mail Flow Rules constants
RULES = {
    "domains_permanently_delete": "Siemplify - Domains List - Permanently Delete",
    "senders_permanently_delete": "Siemplify - Senders List - Permanently Delete",
}

DOMAIN_RULES = [
    RULES.get("domains_permanently_delete")
]

SENDER_RULES = [
    RULES.get("senders_permanently_delete")
]

ACTIONS = {
    RULES.get("domains_permanently_delete"): "-DeleteMessage $True",
    RULES.get("senders_permanently_delete"): "-DeleteMessage $True",
}

CONDITIONS = {
    "domain": "-FromAddressContainsWords",
    "sender":  "-From"
}

CORRESPONDING_RULES = {
    RULES.get("senders_permanently_delete"): RULES.get("domains_permanently_delete"),
}

ALL_AVAILABLE_RULES_STRING = "All available Exchange-Siemplify Mail Flow Rules"

EMAIL_REGEX = r"[\w\d_.+-]+@([\w\d.-]+\.)+[\w.-]{2,}"
DOMAIN_REGEX = r"^([\w\d.-]+\.)+[\w.-]{2,}$"

# maximum retries count in case of network error
ASYNC_ACTION_MAX_RETRIES = 5
COMMAND_TIMEOUT = 240
