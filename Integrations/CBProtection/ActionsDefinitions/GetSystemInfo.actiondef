{
    "CreationTimeUnixTimeInMs": 1527580505790, 
    "Creator": "admin", 
    "Description": "Get information about a computer", 
    "DynamicResultsMetadata": [
        {
            "ResultExample": "{\"macAddress\": \"00:50:56:11:22:33\", \"systemMemoryDumps\": 0, \"policyStatusDetails\": \"Agent did not receive all the rules yet\", \"prioritized\": \"False\", \"platformId\": 1, \"upgradeErrorTime\": \"None\", \"tdCount\": 0, \"hasDuplicates\": \"False\", \"disconnectedEnforcementLevel\": 60, \"hasHealthCheckErrors\": \"False\", \"syncPercent\": 100, \"agentVersion\": \"8.0.0.2562\", \"activeDebugLevel\": 0, \"templateCloneCleanupMode\": \"None\", \"processorCount\": 4, \"kernelDebugLevel\": 0, \"refreshFlags\": 0, \"activeKernelDebugLevel\": 2, \"users\": \"WORKGROUP\\\\\\\\TEST$,Window Manager\\\\\\\\TEST-4\", \"policyName\": \"Default Policy\", \"enforcementLevel\": 60, \"templateDate\": \"None\", \"previousPolicyId\": 6, \"memorySize\": 8192, \"machineModel\": \"VMware Virtual Platform\", \"id\": 1, \"policyStatus\": \"Approvals out of date\", \"processorSpeed\": 2200.0, \"ccFlags\": 0, \"template\": \"False\", \"initializing\": \"False\", \"initPercent\": 100, \"uninstalled\": \"False\", \"computerTag\": \"None\", \"templateComputerId\": 0, \"daysOffline\": 55, \"upgradeError\": \"None\", \"automaticPolicy\": \"False\", \"description\": \"None\", \"osShortName\": \"Windows Server 2012\", \"deleted\": \"False\", \"localApproval\": \"False\", \"tamperProtectionActive\": \"True\", \"lastPollDate\": \"2018-11-23T21:59:12.613Z\", \"activeDebugFlags\": 16, \"CLIPassword\": \"TEST-TEST-TEST-TEST\", \"dateCreated\": \"2018-05-29T10:10:19.26Z\", \"virtualPlatform\": \"VMware\", \"connected\": \"False\", \"supportedKernel\": \"True\", \"debugLevel\": -1, \"cbSensorVersion\": \"None\", \"upgradeStatus\": \"Up to date\", \"upgradeErrorCount\": 0, \"isActive\": \"False\", \"debugFlags\": 0, \"agentMemoryDumps\": 0, \"name\": \"WORKGROUP\\\\\\\\TEST\", \"lastRegisterDate\": \"2018-11-22T10:49:41.583Z\", \"ipAddress\": \"1.1.1.1\", \"cbSensorId\": 0, \"SCEPStatus\": 0, \"agentCacheSize\": 43432, \"cbSensorFlags\": 0, \"clVersion\": 1212, \"osName\": \"Microsoft Windows Server 2012 R2 x64 Server Standard (Evaluation) (6.3.9600)\", \"templateCloneCleanupTimeScale\": \"None\", \"policyId\": 1, \"forceUpgrade\": \"False\", \"templateTrackModsOnly\": \"False\", \"templateCloneCleanupTime\": \"None\", \"agentQueueSize\": 0, \"virtualized\": \"Yes\", \"ccLevel\": 0, \"debugDuration\": 0, \"processorModel\": \"Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz\", \"syncFlags\": 8}", 
            "ResultName": "JsonResult"
        }
    ], 
    "Id": -1, 
    "IntegrationIdentifier": "CBProtection", 
    "IsCustom": false, 
    "IsEnabled": true, 
    "ModificationTimeUnixTimeInMs": 1527580505790, 
    "Name": "Get System Info", 
    "Parameters": [], 
    "Script": "from SiemplifyDataModel import EntityTypes\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import dict_to_flat, add_prefix_to_dict, flat_dict_to_csv\nfrom CarbonBlackProtectionManager import CBProtectionManager, CBProtectionManagerException\n\n\ndef main():\n    siemplify = SiemplifyAction()\n    configurations = siemplify.get_configuration('CBProtection')\n    server_addr = configurations['Api Root']\n    api_key = configurations['Api Key']\n\n    cb_protection = CBProtectionManager(server_addr, api_key)\n\n    enriched_entities = []\n    errors = \"\"\n\n    for entity in siemplify.target_entities:\n        try:\n            computer = None\n\n            if entity.entity_type == EntityTypes.ADDRESS:\n                computer = cb_protection.get_computer_by_ip(entity.identifier)\n\n            elif entity.entity_type == EntityTypes.HOSTNAME:\n                computer = cb_protection.get_computer_by_hostname(entity.identifier)\n\n            if computer:\n                # Enrich the entity with the data\n                flat_computer = dict_to_flat(computer)\n                flat_computer = add_prefix_to_dict(flat_computer, \"CBProtection\")\n                entity.additional_properties.update(flat_computer)\n\n                computer_info = {\n                    \"Id\": computer.get('id'),\n                    \"Hostname\": computer.get(\"name\"),\n                    \"Mac Address\": computer.get(\"macAddress\"),\n                    \"Ip Address\": computer.get(\"ipAddress\"),\n                    \"Policy Name\": computer.get(\"policyName\"),\n                    \"Connected\": computer.get(\"connected\"),\n                    \"Operating System\": computer.get(\"osName\"),\n                    \"Last Updated\": computer.get(\"last_update\"),\n                    \"Agent Version\": computer.get(\"agentVersion\t\"),\n                }\n\n                # Attach as csv\n                csv_output = flat_dict_to_csv(computer_info)\n                siemplify.result.add_entity_table(entity.identifier,\n                                                  csv_output)\n\n                enriched_entities.append(entity)\n\n        except Exception as e:\n            errors += \"Unable to get system info of {0}: \\n{1}\\n\".format(\n                entity.identifier, e.message)\n            continue\n\n    if enriched_entities:\n        entities_names = [entity.identifier for entity in enriched_entities]\n        output_message = 'Carbon Black Protection - Enriched the following entities\\n' + '\\n'.join(\n            entities_names)\n        output_message += errors\n\n        siemplify.update_entities(enriched_entities)\n\n    else:\n        output_message = 'Carbon Black Protection - No entities were enriched.\\n'\n        output_message += errors\n\n    siemplify.end(output_message, 'true')\n\n\nif __name__ == '__main__':\n    main()\n", 
    "ScriptResultName": "success", 
    "SimulationDataJson": "{\"Entities\": [\"HOSTNAME\", \"ADDRESS\"]}", 
    "Version": 1.0
}