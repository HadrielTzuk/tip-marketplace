{
    "CreationTimeUnixTimeInMs": 1527754004985, 
    "Creator": "admin", 
    "Description": "Get details about a computer", 
    "DynamicResultsMetadata": [
        {
            "ResultExample": "[{\"EntityResult\": {\"orbital\": {\"status\": \"not_enabled\"}, \"operating_system\": \"Windows 10, SP 0.0\", \"connector_guid\": \"f719857b-5474-467f-803c-00393616cdcf\", \"policy\": {\"guid\": \"d04fbbc0-fc5d-45d9-94f6-9e53f5079c2f\", \"name\": \"Triage\"}, \"external_ip\": \"1.1.1.1\", \"group_guid\": \"bcaafdfb-bf15-4f65-81e0-58b14624ff26\", \"hostname\": \"Demo_AMP\", \"install_date\": \"2019-12-19T16:00:07Z\", \"network_addresses\": [{\"ip\": \"1.1.1.1\", \"mac\": \"18:ac:08:1f:49:13\"}], \"connector_version\": \"7.1.5.11523\", \"windows_processor_id\": \"96b4ea231f570d8\", \"internal_ips\": [\"1.1.1.1\"], \"faults\": [], \"isolation\": {\"available\": false, \"status\": \"not_isolated\"}, \"active\": true, \"last_seen\": \"2019-12-21T17:07:39Z\"}, \"Entity\": \"Demo_AMP\"}]", 
            "ResultName": "JsonResult"
        }
    ], 
    "Id": -1, 
    "IntegrationIdentifier": "CiscoAMP", 
    "IsCustom": false, 
    "IsEnabled": true, 
    "ModificationTimeUnixTimeInMs": 1527754004985, 
    "Name": "Get Computer Info", 
    "Parameters": [], 
    "Script": "from SiemplifyDataModel import EntityTypes\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import dict_to_flat, add_prefix_to_dict, flat_dict_to_csv\nfrom CiscoAMPManager import CiscoAMPManager\n\n\ndef main():\n    siemplify = SiemplifyAction()\n    configurations = siemplify.get_configuration('CiscoAMP')\n    server_addr = configurations['Api Root']\n    client_id = configurations['Client ID']\n    api_key = configurations['Api Key']\n    use_ssl = configurations['Use SSL'].lower() == 'true'\n\n    cisco_amp_manager = CiscoAMPManager(server_addr, client_id, api_key,\n                                        use_ssl)\n\n    enriched_entities = []\n    errors = \"\"\n\n    for entity in siemplify.target_entities:\n        try:\n            computer = None\n\n            if entity.entity_type == EntityTypes.ADDRESS:\n                computer = cisco_amp_manager.get_computer_info_by_ip(\n                    entity.identifier, internal=entity.is_internal)\n\n            elif entity.entity_type == EntityTypes.HOSTNAME:\n                computer = cisco_amp_manager.get_computer_info_by_hostname(entity.identifier)\n\n            if computer:\n                # Remove links (not relevant)\n                del computer[\"links\"]\n\n                # Enrich the entity with the data\n                flat_computer = dict_to_flat(computer)\n                flat_computer = add_prefix_to_dict(flat_computer, \"CiscoAMP\")\n                entity.additional_properties.update(flat_computer)\n\n                computer_info = {\n                    \"Id\": computer.get('connector_guid'),\n                    \"Hostname\": computer.get(\"hostname\"),\n                    \"External IP\": computer.get(\"external_ip\"),\n                    \"Internal IPs\": \",\".join(computer.get(\"internal_ips\", [])),\n                    \"Policy Name\": computer[\"policy\"].get('name') if computer.get(\"policy\") else None,\n                    \"Active\": computer.get(\"active\"),\n                    \"Operating System\": computer.get(\"operating_system\"),\n                    \"Install date\": computer.get(\"install_date\"),\n                    \"Connector Version\": computer.get(\"connector_version\t\"),\n                }\n\n                # Attach as csv\n                csv_output = flat_dict_to_csv(computer_info)\n                siemplify.result.add_entity_table(entity.identifier,\n                                                  csv_output)\n\n                enriched_entities.append(entity)\n\n        except Exception as e:\n            errors += \"Unable to get computer info of {0}: \\n{1}\\n\".format(\n                entity.identifier, e.message)\n            continue\n\n    if enriched_entities:\n        entities_names = [entity.identifier for entity in enriched_entities]\n        output_message = 'Cisco AMP - Enriched the following entities\\n' + '\\n'.join(\n            entities_names)\n        output_message += errors\n\n        siemplify.update_entities(enriched_entities)\n\n    else:\n        output_message = 'Cisco AMP - No entities were enriched.\\n'\n        output_message += errors\n\n    siemplify.end(output_message, 'true')\n\n\nif __name__ == '__main__':\n    main()\n", 
    "ScriptResultName": "success", 
    "SimulationDataJson": "{\"Entities\": [\"HOSTNAME\", \"ADDRESS\"]}", 
    "Version": 1.0
}