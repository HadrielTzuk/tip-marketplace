{
    "CreationTimeUnixTimeInMs": 1527755500066, 
    "Creator": "admin", 
    "Description": "Fetch a list of computers that have observed files with the given file name", 
    "DynamicResultsMetadata": [
        {
            "ResultExample": "[{\"EntityResult\": {\"0\": {\"connector_guid\": \"abfe956e-8b67-4d5c-9353-1b490cdad8b2\", \"links\": {\"trajectory\": \"https://api.amp.cisco.com/v1/computers/abfe956e-8b67-4d5c-9353-1b490cdad8b2/trajectory\", \"computer\": \"https://api.amp.cisco.com/v1/computers/abfe956e-8b67-4d5c-9353-1b490cdad8b2\", \"group\": \"https://api.amp.cisco.com/v1/groups/1d7e90f6-b6b6-49ba-90ab-a8fe13d8f3d4\"}, \"group_guid\": \"1d7e90f6-b6b6-49ba-90ab-a8fe13d8f3d4\", \"active\": \"True\", \"operating_system\": \"Windows Server 2012 R2, SP 0.0\", \"network_addresses\": [{\"ip\": \"10.0.0.4\", \"mac\": \"00:0d:3a:4e:fc:6e\"}, {\"ip\": \"10.212.134.201\", \"mac\": \"00:09:0f:aa:00:01\"}], \"faults\": [], \"external_ip\": \"13.72.107.194\", \"hostname\": \"poc-JuanV\", \"install_date\": \"2019-04-29T19:37:06Z\", \"connector_version\": \"6.2.9.10881\", \"internal_ips\": [\"10.0.0.4\", \" 10.212.134.201\"], \"policy\": {\"guid\": \"9d8be508-fbec-457a-a0eb-c0cb82be482c\", \"name\": \"Server\"}, \"last_seen\": \"2019-05-28T11:46:32Z\"}}, \"Entity\": \"entityIdentifier\"}]", 
            "ResultName": "JsonResult"
        }
    ], 
    "Id": -1, 
    "IntegrationIdentifier": "CiscoAMP", 
    "IsCustom": false, 
    "IsEnabled": true, 
    "ModificationTimeUnixTimeInMs": 1527755500066, 
    "Name": "Get Computers By File Name", 
    "Parameters": [], 
    "Script": "from SiemplifyDataModel import EntityTypes\nfrom SiemplifyAction import SiemplifyAction\nfrom CiscoAMPManager import CiscoAMPManager\n\n\ndef main():\n    siemplify = SiemplifyAction()\n    configurations = siemplify.get_configuration('CiscoAMP')\n    server_addr = configurations['Api Root']\n    client_id = configurations['Client ID']\n    api_key = configurations['Api Key']\n    use_ssl = configurations['Use SSL'].lower() == 'true'\n\n    cisco_amp_manager = CiscoAMPManager(server_addr, client_id, api_key, use_ssl)\n\n    enriched_entities = []\n    errors = \"\"\n\n    for entity in siemplify.target_entities:\n        try:\n            if entity.entity_type == EntityTypes.FILENAME:\n                computers = cisco_amp_manager.get_computer_activity(\n                    entity.identifier)\n\n                if computers:\n                    flat_computers = []\n\n                    for computer in computers:\n                        # Remove links (not relevant)\n                        del computer[\"links\"]\n\n                        computer_info = {\n                            \"Id\": computer.get('connector_guid'),\n                            \"Hostname\": computer.get(\"hostname\"),\n                            \"External IP\": computer.get(\"external_ip\"),\n                            \"Internal IPs\": \",\".join(\n                                computer.get(\"internal_ips\", [])),\n                            \"Policy Name\": computer[\"policy\"].get(\n                                'name') if computer.get(\"policy\") else None,\n                            \"Active\": computer.get(\"active\"),\n                            \"Operating System\": computer.get(\n                                \"operating_system\"),\n                            \"Install date\": computer.get(\"install_date\"),\n                            \"Connector Version\": computer.get(\n                                \"connector_version\t\"),\n                        }\n\n                        flat_computers.append(computer_info)\n\n                    # Attach file lists in csv\n                    csv_output = cisco_amp_manager.construct_csv(\n                        flat_computers)\n                    siemplify.result.add_data_table(\"Computers\", csv_output)\n\n        except Exception as e:\n            errors += \"Unable to get computer by file {0}: \\n{1}\\n\".format(\n                entity.identifier, e.message)\n            continue\n\n    if enriched_entities:\n        entities_names = [entity.identifier for entity in enriched_entities]\n        output_message = 'Cisco AMP - Got computers by the following files\\n' + '\\n'.join(\n            entities_names)\n        output_message += errors\n\n        siemplify.update_entities(enriched_entities)\n\n    else:\n        output_message = 'Cisco AMP - No computers were found.\\n'\n        output_message += errors\n\n    siemplify.end(output_message, 'true')\n\n\nif __name__ == '__main__':\n    main()\n", 
    "ScriptResultName": "success", 
    "SimulationDataJson": "{\"Entities\": [\"FILENAME\"]}", 
    "Version": 1.0
}