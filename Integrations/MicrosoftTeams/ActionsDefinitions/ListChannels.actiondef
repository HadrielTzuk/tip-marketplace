{
    "CreationTimeUnixTimeInMs": 1543229155761,
    "Creator": "Admin",
    "Description": "Get all channels details that exist in specific team",
    "Id": -1,
    "DynamicResultsMetadata": [
        {
            "ResultExample": "{}",
            "ResultName": "JsonResult"
        }
    ],
    "IntegrationIdentifier": "MicrosoftTeams",
    "IsCustom": false,
    "IsEnabled": true,
    "ModificationTimeUnixTimeInMs": 1543229155761,
    "Name": "List Channels",
    "Parameters": [
        {
            "CreationTimeUnixTimeInMs": 1543229155775,
            "CustomActionId": -1,
            "DefaultValue": "",
            "Description": null,
            "Id": -1,
            "IsMandatory": true,
            "ModificationTimeUnixTimeInMs": 1543229155775,
            "Name": "Team Name",
            "Type": 0,
            "Value": ""
        },
        {
            "CreationTimeUnixTimeInMs": 1543229155775,
            "CustomActionId": -1,
            "DefaultValue": "50",
            "Description": "Specify how many channels to return. Default: 50.",
            "Id": -1,
            "IsMandatory": false,
            "ModificationTimeUnixTimeInMs": 1543229155775,
            "Name": "Max Channels To Return",
            "Type": 0,
            "Value": "50"
        }
    ],
    "Script": "from SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import dict_to_flat, flat_dict_to_csv\nfrom MicrosoftManager import MicrosoftTeamsManager\n\n\ndef main():\n    siemplify = SiemplifyAction()\n\n    conf = siemplify.get_configuration('MicrosoftTeams')\n    client_id = conf[\"Client ID\"]\n    secret_id = conf[\"Secret ID\"]\n    tenant = conf[\"Tenant\"]\n    token = conf.get(\"Refresh Token\")\n\n    mtm = MicrosoftTeamsManager(client_id, secret_id, tenant)\n    # refresh token\n    mtm.refresh_token(token)\n\n    username = siemplify.parameters['Username']\n\n    user_details = mtm.get_user_details(username)\n\n    if user_details:\n        flat_report = dict_to_flat(user_details)\n        csv_output = flat_dict_to_csv(flat_report)\n        siemplify.result.add_data_table(\"{0} User details\".format(username), csv_output)\n        output_message = 'Found details for user {0}'.format(username)\n        result_value = True\n    else:\n        output_message = 'No details found fot user.'\n        result_value = False\n\n    siemplify.end(output_message, result_value)\n\n\nif __name__ == '__main__':\n    main()",
    "ScriptResultName": "all_channels_details",
    "Version": 2.0,
    "SimulationDataJson": "{\"Entities\": []}"
}