{
    "CreationTimeUnixTimeInMs": 1544613911902,
    "Creator": "Admin",
    "Description": "Get the list of al the devices at the system.",
    "Id": -1,
    "IntegrationIdentifier": "MobileIron",
    "IsCustom": false,
    "IsEnabled": true,
    "ModificationTimeUnixTimeInMs": 1544613911902,
    "Name": "List Devices",
    "Parameters": [
        {
            "CreationTimeUnixTimeInMs": 1544613911910,
            "CustomActionId": -1,
            "DefaultValue": "",
            "Description": "The values of the inserted fields will be fetched for a device(Has to be comma separated string), ex: ios.DeviceName,user.display_name,user.email_address,user.user_id",
            "Id": -1,
            "IsMandatory": false,
            "ModificationTimeUnixTimeInMs": 1544613911910,
            "Name": "Fields To Fetch",
            "Type": 0,
            "Value": ""
        }
    ],
    "Script": "# Imports\nfrom MobileIronManager import MobileIronManager\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import dict_to_flat, construct_csv\n\n# Consts.\nPROVIDER_NAME = 'MobileIron'\nACTION_NAME = 'MobileIron_List Devices'\nTABLE_HEADER = 'Devices'\n\n\ndef main():\n    # Variables Definition.\n    result_value = False\n\n    # Configuration.\n    siemplify = SiemplifyAction()\n    siemplify.script_name = \"\"\n    configuretion_settings = siemplify.get_configuration(PROVIDER_NAME)\n    api_root = configuretion_settings['API Root']\n    username = configuretion_settings['Username']\n    password = configuretion_settings['Password']\n    admin_device_id = configuretion_settings.get('Admin Device ID', 1)\n    connected_cloud = configuretion_settings.get('Connected Cloud', 'false').lower() == 'true'\n    verify_ssl = configuretion_settings.get('Verify SSL', 'false').lower() == 'true'\n\n    mobile_iron_manager = MobileIronManager(api_root, username, password, admin_device_id, connected_cloud, verify_ssl)\n\n    # Parameters.\n    fields_to_fetch = siemplify.parameters.get('Fields To Fetch')\n\n    if fields_to_fetch:\n        devices = mobile_iron_manager.fetch_devices(fields_to_fetch=fields_to_fetch)\n    else:\n        devices = mobile_iron_manager.fetch_devices()\n\n    devices = map(dict_to_flat, devices)\n\n    if devices:\n        devices_csv = construct_csv(devices)\n        siemplify.result.add_data_table(TABLE_HEADER, devices_csv)\n        output_message = 'Found \"{0}\" devices.'.format(len(devices))\n        result_value = True\n    else:\n        output_message = 'No devices were found.'\n\n    siemplify.end(output_message, result_value)\n\n\nif __name__ == '__main__':\n    main()\n",
    "ScriptResultName": "is_success",
    "Version": 2.0,
    "SimulationDataJson": "{\"Entities\": []}"
}