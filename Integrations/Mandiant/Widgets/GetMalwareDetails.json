{
  "type": 3,
  "actionIdentifier": "Get Malware Details",
  "title": "Mandiant - Get Malware Details",
  "description": "This widget highlights the most important items in Mandiant - Get Malware Details",
  "dataDefinition":
  {
    "htmlContent": "<!DOCTYPE html><html lang=\"en\"><head> <meta charset=\"UTF-8\"> <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700,700i\" rel=\"stylesheet\"> <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script> <style> body { float: left; width: 100%; padding: 0; margin: 0; box-sizing: border-box; background-color: #212C45; } ::-webkit-scrollbar { width: 0; } .cardContainer { display: flex; } .cntLeftSide { flex-direction: column; width: 30%; padding-right: 6px; height: fit-content; } .cntRightSide { width: 65%; padding-left: 3%; border-left: 1px solid #576B95; } .leftMenu { height: 38px; line-height: 38px; display: block; padding-left: 10px; cursor: pointer; overflow: hidden; text-overflow: ellipsis; color: #C3D2E8 } .leftMenu.active { background: #3A4A6C; font-weight: bold; color: #fff; } .fieldTitle { display: flex; justify-content: space-between; align-items: center; border-bottom: 1px solid #576B95; margin-bottom: 4px; } .fieldEntityTitle { font-weight: bold; font-size: 20px; overflow: hidden; text-overflow: ellipsis; max-width: 70%; } .field { display: flex; justify-content: space-between; padding-top: 10px; } .fieldName { width: 35%; color: #C3D2E8; padding-right: 10px; } .fieldEntityHidden { font-style: normal; font-weight: bold; width: 65%; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; cursor: pointer; } .fieldEntityOpen { overflow: hidden; overflow-y: auto; max-height: 148px; width: 65%; white-space: unset; text-overflow: unset; } svg { width: 38px; margin: 8px; } .hidden { display: none; } </style></head><body><div class=\"cardContainer\" style=\"font-family: Open Sans, serif; font-size: 12px; color: #fff\"> <div class=\"cntLeftSide\" id=\"leftMenu\"> </div> <div class=\"cntRightSide\" id=\"rightMenu\"> <div class=\"fields hidden\" id=\"malware\"> <div class=\"fieldTitle\"> <div class=\"fieldEntityTitle\" id=\"malware-title\"></div> <svg id=\"a\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\" fill=\"currentColor\"> <path fill=\"#FFFFF\" d=\"M19.6,13.11v8.85h3.37V9.61c-.91,0-1.75,.38-2.39,1.01-.64,.66-.98,1.54-.98,2.48Zm1.78-5.67c.47-.24,1.01-.31,1.55-.24h.03l.03-4.2h-3.33l-7.5,10.71L4.69,3H2V22h3.43V9.54l5.72,8.19h2.02l5.22-7.45c.34-.49,.74-.94,1.14-1.36l.03-.03c.5-.56,1.14-1.12,1.82-1.43Z\"/> </svg> </div> <div class=\"field\"> <div class=\"fieldName\">Aliases</div> <div class=\"fieldEntityHidden\" id=\"malware-aliases\"></div> </div> <div class=\"field\"> <div class=\"fieldName\">Description</div> <div class=\"fieldEntityHidden\" id=\"malware-description\"></div> </div> <div class=\"field\"> <div class=\"fieldName\">Operating Systems</div> <div class=\"fieldEntityHidden\" id=\"malware-operating-system\"></div> </div> <div class=\"field\"> <div class=\"fieldName\">Capabilities</div> <div class=\"fieldEntityHidden\" id=\"malware-capabilities\"></div> </div> <div class=\"field\"> <div class=\"fieldName\">Roles</div> <div class=\"fieldEntityHidden\" id=\"malware-roles\"></div> </div> <div class=\"field\"> <div class=\"fieldName\">Last Activity Time</div> <div class=\"fieldEntityHidden\" id=\"malware-last-time\"></div> </div> <div class=\"field\"> <div class=\"fieldName\">Link</div> <a href target=\"_blank\" class=\"fieldEntityHidden\" id=\"malware-link\" style=\"color: #669DF6; text-decoration-line: underline;\"></a> </div> </div> </div></div><script> $(document).ready(function () { const actionData = [{stepInstanceName}.JsonResult]; if (actionData.length) { function removeSpecialSymbols(el) { return el.replaceAll(/[\\s ;:.,/%!&?-]/g, '').replaceAll('\\\\', '',) } function entityDisplayed(el) { let type = el.EntityResult.type; let elId = el.Entity; function checkMalwareField(field) { if (field === undefined) { return \"n/a\"; } else { let arrayEntity = field.map((el) => el.name); return arrayEntity.length > 0 ? arrayEntity.join(', ') : \"n/a\"; } } function checkField(field) { if (field === undefined) { return \"n/a\"; } else if (typeof field === 'string') { return field.length > 0 ? field : \"n/a\"; } else if (Array.isArray(field)) { return field.length > 0 ? field.join(', ') : \"n/a\"; } } function checkLink(link, id) { return link ? id.html(link).attr('href', link) : id.html('n/a'); } let malwareAliases = el.EntityResult.aliases; let arrayOS = el.EntityResult.operating_systems; let arrayCapabilities = el.EntityResult.capabilities; let arrayRoles = el.EntityResult.roles; $(\"#malware-title\").html(el.Entity); $(\"#malware-aliases\").html(checkMalwareField(malwareAliases)); $(\"#malware-description\").html(checkField(el.EntityResult.description)); $(\"#malware-operating-system\").html(checkField(arrayOS)); $(\"#malware-capabilities\").html(checkMalwareField(arrayCapabilities)); $(\"#malware-roles\").html(checkField(arrayRoles)); $(\"#malware-last-time\").html(checkField(el.EntityResult.last_activity_time)); checkLink(el.EntityResult.report_link, $(\"#malware-link\")); $(\"#fields\").attr('id', `${removeSpecialSymbols(elId)}`); $(`[id=${type}]`).removeClass(\"hidden\"); } let defaultEntity = actionData[0]; entityDisplayed(defaultEntity); function createLeftMenu() { let string = ''; actionData.forEach((el, index) => { index ? string += `<div class=\"leftMenu\" id=${removeSpecialSymbols(el.Entity)}>${el.Entity}</div>` : string += `<div class=\"leftMenu active\" id=${removeSpecialSymbols(el.Entity)}>${el.Entity}</div>` }); $(\"#leftMenu\").html(string) } createLeftMenu(); $(\".cntLeftSide\").click(function (event) { let arrayLeftSide = $(\".leftMenu\"); let id = event.target.id; let right = $(\".fields\"); $.each(right, function (key, entity) { entity.classList.add(\"hidden\") }); $.each(arrayLeftSide, function (key, entity) { if (entity.id === id) { $(`#${entity.id}`).addClass(\"active\") } else { $(`#${entity.id}`).removeClass(\"active\") } }); let object = actionData.find((el) => { if (el.EntityResult.id) { return removeSpecialSymbols(el.Entity) === id } }); entityDisplayed(object); let arrayRightSide = $(\".fieldEntityHidden\"); $.each(arrayRightSide, function (key, entity) { entity.classList.remove(\"fieldEntityOpen\") }) }); $(\".field\").click(function (event) { let id = event.target.id; let element = $(`#${id}`); if (element.hasClass(\"fieldEntityOpen\")) { element.removeClass(\"fieldEntityOpen\") } else { element.addClass(\"fieldEntityOpen\") } }); } });</script></body></html>",
    "htmlHeight": 400,
    "safeRendering": false,
    "type": 3,
    "widgetDefinitionScope": 2
  },
  "conditionsGroup": {
    "conditions": [
      {
        "value": "true",
        "fieldName": "[{stepInstanceName}.is_success]",
        "matchType": 0
      }
    ],
    "logicalOperator": 0
  },
  "defaultSize": 1
}