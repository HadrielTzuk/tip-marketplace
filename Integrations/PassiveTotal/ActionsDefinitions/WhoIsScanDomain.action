{
    "CreationTimeUnixTimeInMs": 1512669091295, 
    "Creator": "admin", 
    "Description": "RiskIQ domain WHOIS query", 
    "DynamicResultsMetadata": [
        {
            "ResultExample": "[{\"EntityResult\": {\"domain\": \"test.com\", \"name\": \"N/A\", \"billing\": {}, \"admin\": {}, \"text\": \"Domain Name: test.COM   Registry Domain ID: 2138514_DOMAIN_COM-VRSN.\", \"registered\": \"1997-09-14T21:00:00.000-0700\", \"lastLoadedAt\": \"2018-10-01T15:38:19.795-0700\", \"whoisServer\": \"whois.markmonitor.com\", \"telephone\": \"N/A\", \"registryUpdatedAt\": \"2018-02-21T10:36:40.000-0800\", \"nameServers\": [\"ns1.test.com\", \"ns2.test.com\", \"ns3.test.com\"], \"expiresAt\": \"2020-09-13T21:00:00.000-0700\", \"tech\": {}, \"organization\": \"N/A\", \"registrar\": \"MarkMonitor Inc.\", \"zone\": {}, \"registrant\": {}}, \"Entity\": \"test.com\"}]", 
            "ResultName": "JsonResult"
        }
    ], 
    "Id": -1, 
    "IntegrationIdentifier": "PassiveTotal", 
    "IsCustom": false, 
    "IsEnabled": true, 
    "ModificationTimeUnixTimeInMs": 1512669091295, 
    "Name": "WhoIs Scan Domain", 
    "Parameters": [], 
    "Script": "# Imports\nfrom SiemplifyAction import *\nfrom PassiveTotalManager import PassiveTotal\n\n# Consts\nHOSTNAME = 'HOSTNAME'\n\n# Action Contenta\nsiemplify = SiemplifyAction()\n\nconfiguration = siemplify.get_configuration('PassiveTotal')\npassive_total = PassiveTotal(user=configuration['Username'], key=configuration['Api_Key'])\nscope_entities = [entity for entity in siemplify.target_entities if entity.entity_type == HOSTNAME\n                      and not entity.is_internal]\nentities_to_update = []\noutput_message = ''\nresult_value = False\n\nfor entity in scope_entities:\n        whois_dict = passive_total.get_whois_dict(entity.identifier)\n        whois_csv = passive_total.get_whois_csv(entity.identifier)\n        if len(whois_dict) and whois_dict:\n            entity.additional_properties.update(whois_dict)\n            entities_to_update.append(entity)\n            # Enrich location fields.\n            if 'WH_country' in whois_dict.keys():\n                entity.additional_properties['Country'] = whois_dict['WH_country']\n            if 'WH_city' in whois_dict.keys():\n                entity.additional_properties['City'] = whois_dict['WH_city']\n        # Display result output\n        if len(whois_csv) > 1 and whois_csv:\n            siemplify.result.add_entity_table(entity.identifier, whois_csv)\n\n# Update Entities\nsiemplify.update_entities(entities_to_update)\n# Arrange Action Output.\nif len(scope_entities) == 0:\n    output_message = 'No entities for scan.'\nelse:\n    if len(entities_to_update) == 0:\n        output_message = 'No entities were enriched.'\n    else:\n        for entity in entities_to_update:\n            if len(output_message) == 0:\n                output_message = entity.identifier\n            else:\n                output_message += ', {0}'.format(entity.identifier)\n        output_message += ' enriched by WhoIs RISKIQ.'\nsiemplify.end(output_message, result_value)\n", 
    "ScriptResultName": "<Entity:Result>", 
    "SimulationDataJson": "{\"Entities\": [\"HOSTNAME\"]}", 
    "Type": 0, 
    "Version": 0.0
}