{
  "type": 3,
  "actionIdentifier": "Similar Events Query",
  "title": "Qradar - Similar Events Query",
  "description": "This widget highlights the most important items in Qradar - Similar Events Query.",
  "dataDefinition":
  {
    "htmlContent": "<!DOCTYPE html><html lang=\"en\"><head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700,700i\" rel=\"stylesheet\"> <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script> <title>Query Widget</title> <style>body{float: left; width: 100%; padding: 0; margin: 0; box-sizing: border-box; background-color: #212C45;}.widget-container{padding: 0 20px;}::-webkit-scrollbar{width: 0;}.logo{text-align: right; padding-top: 8px; padding-bottom: 8px;}.logo svg{vertical-align: top;}.notable{overflow-x: auto;}.notable table{width: 100%; margin-left: 0; margin-right: 0;}.notable table tr th{white-space: nowrap; min-width: 100px;}.notable table tr th{text-align: left; border-bottom: 1px solid #576B95; border-top: 1px solid #576B95; padding: 10px; font-weight: bold;}table{margin: 22px 2%; width: 96%; border-collapse: collapse; word-break: break-word;}.playbook table tr td{line-height: 16px; text-align: left; border-bottom: 1px solid #576B95; padding: 10px; color: #C3D2E8;}.MainCounter{display: flex; justify-content: center; align-items: center; padding: 32px 4% 36px 4%; text-align: center;}h1{font-weight: bold; font-size: 104px; text-shadow: 1px 1px #fff; margin: 0;}h3{font-weight: bold; font-size: 26px; margin: 0; text-align: center;}.longText{width: 20vw; cursor: pointer;}.longText-hidden{white-space: nowrap; overflow: hidden; text-overflow: ellipsis;}.cardContainer{display: flex;}.cntRightSide{width: 65%; padding-left: 3%; border-left: 1px solid #576B95;}.cntLeftSide{flex-direction: column; width: 30%; padding-right: 6px;}.leftMenu{height: 38px; line-height: 38px; display: block; padding-left: 10px; cursor: pointer; overflow: hidden; text-overflow: ellipsis; color: #C3D2E8}.leftMenu.active{background: #3A4A6C; font-weight: bold; color: #fff;}.fieldTitle{display: flex; justify-content: space-between; align-items: center; border-bottom: 1px solid #576B95; margin-bottom: 4px; padding-top: 8px; padding-bottom: 8px;}.fieldKeyTitle{font-weight: bold; font-size: 20px; overflow: hidden; text-overflow: ellipsis; max-width: 70%;}</style></head><body style=\"font-family: Open Sans, serif; font-size: 14px; color: #fff\"><div class=\"cardContainer\" style=\"font-family: Open Sans, serif; font-size: 12px; color: #fff\"> <div class=\"cntLeftSide\" id=\"leftMenu\"></div><div class=\"cntRightSide\" id=\"rightMenu\"> <div class=\"fields\" id=\"malware\"> <div class=\"fieldTitle\"> <div class=\"fieldKeyTitle\" id=\"title\"></div><div class=\"logo\"> <svg class=\"logo-svg\" width=\"64\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M19.1,9.4c-1.3-2.9-4.3-4.6-7.5-4.2c-3,0.3-5.5,2.7-6.2,5.9c-0.5,2.7,0.7,5.6,2.2,6.4c-0.1-0.1-0.1-0.2-0.2-0.3 c-0.3-0.5-0.6-0.9-0.8-1.5c-0.7-1.6-0.9-3.3-0.4-5C7,8.1,8.9,6.8,11.6,6.4c4.2-0.6,7.6,3.1,6.7,7.3c-0.2,1.2-0.8,2.2-1.6,3.1 c0.3,0.3,0.6,0.6,0.9,0.8C19.7,15.7,20.3,12.2,19.1,9.4z M15.8,8.6C13.6,6.7,10.2,7,8.5,9.4c-1.9,2.5-0.9,5.7,0.6,6.7 c0-0.2,0-0.3-0.1-0.4c-0.8-1.2-1.1-2.4-0.8-3.8c0.4-1.7,1.7-3,3.3-3.3c1.7-0.3,3.4,0.4,4.3,1.8c0.9,1.5,0.8,3-0.3,4.6 c-0.1,0.1-0.1,0.2-0.2,0.3c0.3,0.3,0.5,0.6,0.8,0.8C18.1,14.1,18,10.5,15.8,8.6z M14.6,10.5c-1-1.1-2.6-1.3-3.8-0.4 C9.7,11,9.3,12.7,10.1,14c0.1,0.2,0.3,0.3,0.5,0.4c-0.1-0.2-0.1-0.4-0.2-0.6c-0.4-0.8-0.5-1.6,0-2.4c0.4-0.7,1-1.1,1.8-1 c1.2,0.1,2.1,1.4,1.8,2.7c-0.2,0.8-0.2,0.8,0.5,1.3c0,0,0.1,0,0.1,0C15.6,13.3,15.6,11.6,14.6,10.5z M23.6,12.6 c0-6.1-5-11.1-11.1-11.1S1.4,6.5,1.4,12.6s5,11.1,11.1,11.1c0.2,0,0.5,0,0.7,0v0h10.3v-2h-4.6C21.7,19.7,23.6,16.4,23.6,12.6z M12.5,21.7c-5,0-9.1-4.1-9.1-9.1c0-5,4.1-9.1,9.1-9.1c5,0,9.1,4.1,9.1,9.1C21.6,17.6,17.5,21.7,12.5,21.7z\"/> </svg> </div></div></div><div class=\"MainCounter\" > <div> <h1 id=\"count\"></h1> <div class=\"simi-alerts \"> <div> <h3 id=\"alerts-title\"></h3> </div></div></div></div><div class=\"playbook notable\"> <table> <thead id=\"fieldHeaders\"></thead> <tbody id=\"fieldData\"></tbody> </table> </div></div></div><script>$(document).ready(()=>{const actionListData=[{stepInstanceName}.JsonResult]; if (!actionListData.length){return;}entityDisplayed(actionListData[0]); createLeftMenu(); $(\".cntLeftSide\").click(event=>{const arrayLeftSide=$(\".leftMenu\"); const id=event.target.id; $.each(arrayLeftSide, (key, value)=>{if (value.id===id){$(`#${value.id}`).addClass(\"active\");}else{$(`#${value.id}`).removeClass(\"active\");}}); const object=actionListData.find(el=>{if (el.Entity){return removeSpecialSymbols(el.Entity)===id;}}); entityDisplayed(object);}); function entityDisplayed(el){const dataCount=el.EntityResult.length; if (dataCount===1){$(\"#alerts-title\").html(\"SIMILAR EVENT FOUND\");}else{$(\"#alerts-title\").html(\"SIMILAR EVENTS FOUND\");}$(\"#count\").html(dataCount); $(\"#title\").html(el.Entity) $(\"#fields\").attr(\"id\", `${removeSpecialSymbols(el.Entity)}`) const iterListData=el.EntityResult; const tableMapping={}; for (const item of iterListData){for (const key of Object.keys(item)){if (tableMapping[key]===undefined){tableMapping[key]=[];}}}for (const [heading, dataArray] of Object.entries(tableMapping)){for (const item of iterListData){dataArray.push(fieldExists(item[heading]));}}const initialValue=\"\"; const keys=Object.keys(tableMapping); const headerHTML=`<tr>${keys.map( key=> key.toString() .replace(/^[-_]*(.)/, (_, c)=> c.toUpperCase()) .replace(/[-_]+(.)/g, (_, c)=> \" \" + c.toUpperCase()) ).reduce((headerString, key)=> headerString + `<th>${key}</th>`, initialValue)}</tr>`; const tableColumns=Object.values(tableMapping); // Transposing from columns to rows const tableRows=tableColumns[0].map((col, i)=> tableColumns.map(row=> row[i])); const isObject=obj=> obj && obj.constructor===({}).constructor; const bodyHTML=tableRows.reduce( (tableRows, tableRowArray)=> tableRows + `<tr>${tableRowArray.reduce( (dataCells, dataCell)=>{if (Array.isArray(dataCell)){dataCell=dataCell .map(item=> isObject(item) ? JSON.stringify(item, null, 4) : item) .join(\", \");}else if (isObject(dataCell)){dataCell=JSON.stringify(dataCell, null, 4);}return dataCells + `<td>${createLongTextCeil(dataCell ? dataCell.toString() : \"\")}</td>`;}, initialValue )}</tr>`, initialValue ); $(\"#fieldHeaders\").html(headerHTML); $(\"#fieldData\").html(bodyHTML); $(\"th\").each(function(idx, _){const check=Boolean( $(\"tbody tr\").find(\"td:eq(\" + idx + \")\").filter(function(){return $.trim($(this).text())===\"N/A\" ? 0 : 1;}).length ); $(\"tr\").find(\"td:eq(\" + idx + \"), th:eq(\" + idx + \")\").toggle(check);}); function fieldExists(field){return field===undefined ? \"N/A\" : field;}addLongTextClickLogic();}function createLeftMenu(){let string=\"\"; actionListData.forEach((el, index)=>{const displayValue=el.Entity; const cleanDisplayValue=removeSpecialSymbols(displayValue); index ? string +=`<div class=\"leftMenu\" id=${cleanDisplayValue}>${displayValue}</div>` : string +=`<div class=\"leftMenu active\" id=${cleanDisplayValue}>${displayValue}</div>`}) $(\"#leftMenu\").html(string)}function removeSpecialSymbols(el){return el.replaceAll(/[\\s ;:.,/%!&?-]/g, \"\").replaceAll(\"\\\", \"\",);}function createLongTextCeil(text){if (!text){return text;}const firstPart=text.slice(0, 250); const secondPart=text.slice(250); const className='longText'; const hiddenClassName=`${className}-hidden`; return `<div class=\"${className}\">${firstPart}</div><div class=\"${className}${hiddenClassName}\">${secondPart}</div>`;}function addLongTextClickLogic(){$('.longText').click(event=>{const classList=event.target.classList; const nextSibling=event.target.nextElementSibling; const nextSiblingClassList=event.target.nextElementSibling?.classList; const className=\"longText\"; const hiddenClassName=`${className}-hidden`; if (nextSibling){if (nextSiblingClassList.contains(hiddenClassName)){nextSiblingClassList.remove(hiddenClassName);}else{nextSiblingClassList.add(hiddenClassName);}}else{if (classList.contains(hiddenClassName)){classList.remove(hiddenClassName);}else{classList.add(hiddenClassName);}}});}});</script></body></html>",
    "htmlHeight": 400,
    "safeRendering": false,
    "type": 3,
    "widgetDefinitionScope": 2
  },
  "conditionsGroup": {
    "conditions": [
      {
        "value": "true",
        "fieldName": "[{stepInstanceName}.is_success]",
        "matchType": 0
      }
    ],
    "logicalOperator": 0
  },
  "defaultSize": 1
}
