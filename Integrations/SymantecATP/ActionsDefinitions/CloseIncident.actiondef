{
    "CreationTimeUnixTimeInMs": 1542547819908,
    "Creator": "Admin",
    "Description": "Change incident status to closed.",
    "Id": -1,
    "IntegrationIdentifier": "SymantecATP",
    "IsCustom": false,
    "IsEnabled": true,
    "ModificationTimeUnixTimeInMs": 1542547819908,
    "Name": "Close Incident",
    "Parameters": [
        {
            "CreationTimeUnixTimeInMs": 1542547819908,
            "CustomActionId": -1,
            "DefaultValue": "",
            "Description": "Specify the UUID of the incident",
            "Id": -1,
            "IsMandatory": true,
            "ModificationTimeUnixTimeInMs": 1542547819908,
            "Name": "Incident UUID",
            "Type": 0,
            "Value": ""
        }
    ],
    "Script": "from SiemplifyAction import SiemplifyAction\nfrom SymantecATPManager import SymantecATPManager\nfrom SiemplifyDataModel import EntityTypes\nfrom SymantecATPManager import ATPEntityTypes\n\n\nATP_PROVIDER = 'SymantecATP'\nACTION_NAME = \"SymantecATP_Close Incident\"\n\n\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = ACTION_NAME\n    conf = siemplify.get_configuration(ATP_PROVIDER)\n    verify_ssl = conf.get('Verify SSL').lower() == 'true'\n    atp_manager = SymantecATPManager(conf.get('API Root'), conf.get('Client ID'), conf.get('Client Secret'), verify_ssl)\n\n    # Parameters.\n    incident_uuid = siemplify.parameters.get('Incident UUID')\n\n    is_closed = atp_manager.close_incident(incident_uuid)\n\n    if is_closed:\n        output_message = \"Incident with uuid {0} was closed.\".format(incident_uuid)\n    else:\n        output_message = \"Incident with uuid {0} was not closed.\"\n\n    siemplify.end(output_message, is_closed)\n\n\nif __name__ == \"__main__\":\n    main()\n",
    "ScriptResultName": "is_closed",
    "Version": 2.0,
    "SimulationDataJson": "{\"Entities\": []}"
}