{
    "CreationTimeUnixTimeInMs": 1527696956012, 
    "Creator": "admin", 
    "Description": "Quarantine endpoint by MAC address", 
    "Id": -1, 
    "IntegrationIdentifier": "CiscoISE", 
    "IsCustom": false, 
    "IsEnabled": true, 
    "ModificationTimeUnixTimeInMs": 1527696956012, 
    "Name": "Quarantine Address", 
    "Parameters": [
        {
            "CreationTimeUnixTimeInMs": 1527696956012, 
            "CustomActionId": -1, 
            "DefaultValue": null, 
            "Description": "Policy name to attach the endpoint to.", 
            "Id": -1, 
            "IsMandatory": true, 
            "ModificationTimeUnixTimeInMs": 1527696956012, 
            "Name": "Policy Name", 
            "Type": 0, 
            "Value": null
        }
    ], 
    "Script": "from SiemplifyAction import SiemplifyAction\nfrom CiscoISEManager import CiscoISEManager\n\nCISCOISE_PROVIDER = \"CiscoISE\"\n\n\ndef main():\n    # Configuration.\n    siemplify = SiemplifyAction()\n    conf = siemplify.get_configuration(CISCOISE_PROVIDER)\n    cim = CiscoISEManager(conf['API Root'], conf['Username'], conf['Password'], conf['Verify SSL'])\n\n    # Variables.\n    quarantined_ips = []\n    result_value = False\n\n    ip_addresses = [entity.identifier for entity in siemplify.target_entities]\n\n    # Parameters.\n    policy_name = siemplify.parameters['Policy Name']\n\n    for ip_address in ip_addresses:\n        try:\n            mac_address = cim.get_endpoint_mac_by_ip(ip_address)\n            cim.quarantine_endpoint(mac_address, policy_name)\n            quarantined_ips.append(ip_address)\n        except Exception as err:\n            siemplify.LOGGER.error('Error quarantine \"{0}\", ERROR: {1}'.format(ip_address, err.message))\n\n    if quarantined_macs:\n        output_message = \"{0} were quarantined.\".format(\",\".join(quarantined_ips))\n        result_value = True\n    else:\n        output_message = \"No addresses were quarantined.\"\n\n    siemplify.end(output_message, result_value)\n\n\nif __name__ == \"__main__\":\n    main()\n", 
    "ScriptResultName": "is_success", 
    "SimulationDataJson": "{\"Entities\": [\"ADDRESS\"]}", 
    "Version": 1.0
}