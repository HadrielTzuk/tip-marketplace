{
  "type": 3,
  "actionIdentifier": "Enrich Domain",
  "title": "Google Chronicle - Enrich Domain",
  "description": "This widget returns information about the domains that were enriched by Google Chronicle.",
  "dataDefinition":
  {
    "htmlContent": "<!DOCTYPE html><html lang=\"en\"><head> <meta charset=\"UTF-8\"> <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700,700i\" rel=\"stylesheet\"> <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script> <style> body { float: left; width: 100%; padding: 0; margin: 0; box-sizing: border-box; background-color: #212C45; } ::-webkit-scrollbar { width: 0; } .cardContainer { display: flex; } .cntLeftSide { flex-direction: column; width: 30%; padding-right: 6px; height: fit-content; } .cntRightSide { width: 65%; padding-left: 3%; border-left: 1px solid #576B95; } .leftMenu { height: 38px; line-height: 38px; display: block; padding-left: 10px; cursor: pointer; overflow: hidden; text-overflow: ellipsis; color: #C3D2E8 } .leftMenu.active { background: #3A4A6C; font-weight: bold; color: #fff; } .fieldTitle { display: flex; justify-content: space-between; align-items: center; border-bottom: 1px solid #576B95; margin-bottom: 4px; } .fieldEntityTitle { font-weight: bold; font-size: 20px; overflow: hidden; text-overflow: ellipsis; max-width: 70%; white-space: nowrap; } .field { display: flex; justify-content: space-between; padding-top: 10px; } .fieldName { width: 35%; color: #C3D2E8; padding-right: 10px; } .fieldEntityHidden { font-style: normal; font-weight: bold; width: 65%; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; cursor: pointer; } svg { width: 38px; margin: 8px; } .hidden { display: none; } .row { display: flex; align-items: center; } .rowCircleHigh { margin-right: 8px; width: 10px; height: 10px; border-radius: 50%; background-color: #FA903E; } .rowCircleMalicious { margin-right: 8px; width: 10px; height: 10px; border-radius: 50%; background-color: #FF5A50; } .rowCircleMedium { margin-right: 8px; width: 10px; height: 10px; border-radius: 50%; background-color: #FFED2E; } .rowCircleLow { margin-right: 8px; width: 10px; height: 10px; border-radius: 50%; background-color: #42C3D0; } .rowCircleInfo { margin-right: 8px; width: 10px; height: 10px; border-radius: 50%; background-color: #669DF6; } .categoryName { font-weight: bold; font-size: 16px; padding-top: 12px; } </style></head><body><div class=\"cardContainer\" style=\"font-family: Open Sans, serif; font-size: 12px; color: #fff\"> <div class=\"cntLeftSide\" id=\"leftMenu\"> </div> <div class=\"cntRightSide\" id=\"rightMenu\"> <div class=\"fields\"> <div class=\"fieldTitle\"> <div class=\"fieldEntityTitle\" id=\"enrich-domain-title\"></div> <svg width=\"53\" viewBox=\"0 0 25 25\" fill=\"currentColor\"> <path d=\"M12.4,23l8.3-5.2v-4.6L8.4,20.6L12.4,23z M8.4,20.6V8.9L4,6.3v11.5L8.4,20.6z M4,2v4.3h17V2H4z\"></path> </svg> </div> <div class='fieldSource' id='field-source'></div> </div> </div></div><script> $(document).ready(function () { const data = [{stepInstanceName}.JsonResult]; const actionData = data.filter((el)=>el.EntityResult.sources && el.EntityResult.sources.length); if (actionData.length) { function removeSpecialSymbols(el) { return el.replaceAll(/[\\s ;:.,/%!&?-]/g, '').replaceAll('\\\\', '',) } function entityDisplayed(el) { let elId = el.Entity; let arraySources = el.EntityResult.sources; let str = ''; function fieldDisplayed(item) { function createLinkName(item) { return item ? `<a href=${item} target=\"_blank\" style=\"text-decoration-line:underline; font-weight:bold; color: #669DF6;\">Explore</a>` : `<a style = 'color: #fff; font-weight:bold; text-decoration-line: none;'>N/A</a>` } function checkValue(value) { if (value === undefined) { return \"N/A\"; } else { return value.length > 0 ? value : \"N/A\"; } } function checkField(field) { let result = field.ipAddress ? field.ipAddress : 'N/A'; if (result === '') {result = \"N/A\";} return result } function checkRow(elRow) { let string = elRow.charAt(0).toUpperCase() + elRow.slice(1).toLowerCase(); let html = ''; if (string === '') { return 'N/A' } else if (string === 'High') { return html += `<div class = \"row\"><div class = \"rowCircleHigh\"></div><div class = \"rowHText\">${string}</div></div>` } else if (string === 'Malicious') { return html += `<div class = \"row\"><div class = \"rowCircleMalicious\"></div><div class = \"rowHText\">${string}</div></div>` } else if (string === 'Medium') { return html += `<div class = \"row\"><div class = \"rowCircleMedium\"></div><div class = \"rowHText\">${string}</div></div>` } else if (string === 'Low') { return html += `<div class = \"row\"><div class = \"rowCircleLow\"></div><div class = \"rowHText\">${string}</div></div>` } else if (string === 'Info') { return html += `<div class = \"row\"><div class = \"rowCircleInfo\"></div><div class = \"rowHText\">${string}</div></div>` } } function createIpString(el) { return el.filter(item => item !== 'N/A').join() } let row = item.rawSeverity ? checkRow(item.rawSeverity) : 'N/A'; let ipAddressesArray = item.addresses ? item.addresses.map((item) => checkField(item)) : 'N/A'; let ipAddresses = (ipAddressesArray.length > 1) ? createIpString(ipAddressesArray) : ipAddressesArray[0]; str += `<div style = \"margin-bottom: 12px\"> <div class=\"categoryName\">${checkValue(item.category)}</div> <div class=\"field\"> <div class=\"fieldName\">Severity</div> <div class=\"fieldEntityHidden\">${row}</div> </div> <div class=\"field\"> <div class=\"fieldName\">Confidence Score</div> <div class=\"fieldEntityHidden\">${checkValue(item.confidenceScore.strRawConfidenceScore)}</div> </div> <div class=\"field\"> <div class=\"fieldName\">Related IP Addresses</div> <div class=\"fieldEntityHidden\">${ipAddresses}</div> </div> <div class=\"field\"> <div class=\"fieldName\">First Active Time</div> <div class=\"fieldEntityHidden\">${checkValue(item.firstActiveTime)}</div> </div> <div class=\"field\"> <div class=\"fieldName\">Last Active Time</div> <div class=\"fieldEntityHidden\">${checkValue(item.lastActiveTime)}</div> </div> <div class=\"field\"> <div class=\"fieldName\">Source URL</div> <div style=\"width: 65%\">${createLinkName(item.sourceUrl)}</div> </div> </div>`; $(\"#field-source\").html(str) } arraySources.forEach((item) => fieldDisplayed(item)); $(\"#enrich-domain-title\").html(el.Entity); $(\"#fields\").attr('id', `${removeSpecialSymbols(elId)}`); } let defaultEntity = actionData[0]; entityDisplayed(defaultEntity); function createLeftMenu() { let string = ''; actionData.forEach((el, index) => { if (el.EntityResult.sources) { index ? string += `<div class=\"leftMenu\" id=${removeSpecialSymbols(el.Entity)}>${el.Entity}</div>` : string += `<div class=\"leftMenu active\" id=${removeSpecialSymbols(el.Entity)}>${el.Entity}</div>` } }); $(\"#leftMenu\").html(string) } createLeftMenu(); $(\".cntLeftSide\").click(function (event) { let arrayLeftSide = $(\".leftMenu\"); let id = event.target.id; $.each(arrayLeftSide, function (key, entity) { if (entity.id === id) { $(`#${entity.id}`).addClass(\"active\") } else { $(`#${entity.id}`).removeClass(\"active\") } }); let object = actionData.find((el) => removeSpecialSymbols(el.Entity) === id); entityDisplayed(object); }) } });</script></body></html>",
    "htmlHeight": 400,
    "safeRendering": false,
    "type": 3,
    "widgetDefinitionScope": 2
  },
  "conditionsGroup": {
    "conditions": [
      {
        "Value": "",
        "FieldName": "[{stepInstanceName}.JsonResult| \"EntityResult.sources.firstActiveTime\"]",
        "MatchType": 8
      }
    ],
    "logicalOperator": 0
  },
  "defaultSize": 1
}