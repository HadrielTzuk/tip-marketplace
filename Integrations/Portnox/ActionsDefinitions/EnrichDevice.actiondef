{
    "CreationTimeUnixTimeInMs": 1531990282643, 
    "Creator": "admin", 
    "Description": "Enrich a device with additional information", 
    "Id": -1, 
    "IntegrationIdentifier": "Portnox", 
    "IsCustom": false, 
    "IsEnabled": true, 
    "ModificationTimeUnixTimeInMs": 1531990282643, 
    "Name": "Enrich Device", 
    "Parameters": [], 
    "Script": "from SiemplifyDataModel import EntityTypes\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import dict_to_flat, add_prefix_to_dict_keys\nfrom PortnoxManager import PortnoxManager\n\n\nSCRIPT_NAME = \"Portnox - EnrichDevice\"\n\n\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n    conf = siemplify.get_configuration(\"Portnox\")\n    portnox_manager = PortnoxManager(conf['Api Root'], conf['Username'],\n                                     conf['Password'], conf['Verify SSL'])\n\n    enriched_entities = []\n\n    for entity in siemplify.target_entities:\n        try:\n            device = None\n\n            if entity.entity_type == EntityTypes.ADDRESS:\n                device = portnox_manager.search_device('ip', entity.identifier)\n\n            elif entity.entity_type == EntityTypes.MACADDRESS:\n                device = portnox_manager.search_device('macAddress', entity.identifier)\n\n            if device:\n                flat_device = dict_to_flat(device)\n                flat_device = add_prefix_to_dict_keys(flat_device, \"Portnox\")\n                entity.additional_properties.update(flat_device)\n                entity.is_enriched = True\n                enriched_entities.append(entity)\n\n        except Exception as e:\n            # An error occurred - skip entity and continue\n            siemplify.LOGGER.error(\n                \"An error occurred on entity: {}.\\n{}.\".format(\n                    entity.identifier, str(e)\n                ))\n\n    if enriched_entities:\n        entities_names = [entity.identifier for entity in enriched_entities]\n\n        output_message = 'The following entities were enriched:\\n' + '\\n'.join(\n            entities_names)\n\n        siemplify.update_entities(enriched_entities)\n\n    else:\n        output_message = 'No entities were enriched.'\n\n    siemplify.end(output_message, 'true')\n\n\nif __name__ == \"__main__\":\n    main()\n", 
    "ScriptResultName": "success", 
    "SimulationDataJson": "{\"Entities\": [\"MacAddress\", \"ADDRESS\"]}", 
    "Version": 1.0
}