{
    "type": 3,
    "actionIdentifier": "Enrich IOC",
    "title": "VirusTotal - Enrich IOC",
    "description": "This widget returns information about the IOCs that were enriched by VirusTotal.",
    "dataDefinition":
    {
        "htmlContent": "<!DOCTYPE html><html> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700,700i\" rel=\"stylesheet\"> <link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet'> <link href='https://www.siemplify.co/wp-content/cache/min/1/wp-content/themes/siemplify/assets/fonts/fonts.min.css?ver=1628709624' rel='stylesheet'> <style> body { float: left; width: 100%; padding: 0; margin: 0; box-sizing: border-box; background-color: rgb(47, 61, 92); overflow-y: hidden; } .container { background: #2F3D5C; width: 100%; display: flex; float: left; } p { margin: 0; } .invalid-url { width: 100%; border: 0; height: 200px; padding: 0 20px; display: flex; align-items: center; justify-content: center; } .nothing-found { width: 100%; float: left; padding: 20px 0; text-align: center; color: #FFF; font-family: initial; font-weight: 600; } .content-iframe { width: 100%; border: 0; height: 1000px; } .entities { float: left; width: 22%; min-height: 275px; height: 100%; overflow-y: auto; max-height: 1000px; display: flex; flex-direction: column; } .entities-content { float: left; width: 76%; padding-left: 5px; border-left: 1px solid #576B95; margin-left: 5px } .widget-text { display: flex; align-items: center; } span.container-list-item { float: left; font-weight: 400; cursor: pointer; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; padding: 10px; color: #C3D2E8; } span.container-list-item.active { background: #3A4A6C; color: #fff; font-weight: 700; } .widget-text table tbody tr th { vertical-align: initial !important; text-align: left; text-transform: capitalize; font-weight: 400; font-size: 14px; line-height: 22px; color: #4E4F63; width: 130px; } .widget-text tr td { font-style: normal; font-weight: 600; font-size: 14px; line-height: 18px; color: #0F1029; } #content iframe { display: none; } #content iframe:first-child { display: block; }</style> <body> <div class=\"container\" id=\"container\" style=\"font-family: Open Sans, serif; font-size: 12px; color: #FFF\"> <div class=\"entities\" id=\"entitiesList\"></div> <div class=\"entities-content\"> <div class=\"widget-text\" id=\"content\"></div> </div> </div> <script> window.addEventListener('load', init, false); let entitiesData = new Map(); const listElement = document.getElementById('entitiesList'); const contentElement = document.getElementById('content'); const containerElement = document.getElementById('container'); let activeItem; const enrichIocEntities = '[{stepInstanceName}.JsonResult| \"iocs.identifier\"]'; const enrichIocWidgetUrls = '[{stepInstanceName}.JsonResult| \"iocs.details.widget_url\"]'; function init() { const replacedData = getReplacedData(); const dataExists = !isEmptyArray(replacedData); if (dataExists) { setEntitiesData(replacedData); setHtml(); } else { setNothingFound(); } } function getReplacedData() { return [ [enrichIocEntities, enrichIocWidgetUrls], ].filter(array => array.every(item => !item.includes('{stepInstanceName}'))); } function setEntitiesData(replacedData) { const [entities, widgetUrls] = replacedData[0]; const arrayOfEntities = entities.split(','); const arrayOfWidgetUrls = widgetUrls.split(','); arrayOfEntities.forEach((entity, index) => { if (arrayOfWidgetUrls[index]) { entitiesData.set(`${entity}-${index}`, arrayOfWidgetUrls[index]); } }); } function setHtml() { setListElements(); addListenerToListElement(); setFirstItemData(); } function setListElements() { let listHtml = ''; entitiesData.forEach((value, entity) => { listHtml += getListItemHtml(entity); }); listElement.innerHTML = listHtml; } function addListenerToListElement() { listElement.addEventListener('click', onListClick); } function onListClick(event) { const targetElement = event.target; if (targetElement.dataset.hasOwnProperty('id')) { activeItem.classList.remove('active'); const entity = event.target.dataset.id; targetElement.classList.add('active'); setActiveItem(targetElement); setContent(entity); } } function getListItemHtml(entity) { const displayName = entity.split('-')[0]; return `<span class=\"container-list-item\" data-id=\"${entity}\">${displayName}</span>`; } function setContent(entity) { const url = entitiesData.get(entity); const content = getContentHtml(url); contentElement.innerHTML = content; } function getContentHtml(url) { return url ? `<iframe class=\"content-iframe\" src=\"${url}\"\"></iframe>` : `<div class=\"invalid-url\"> URL for VirusTotal widget is invalid or has expired after 3 days. Please re-run the action and try again. </div>`; } function setNothingFound() { containerElement.innerHTML = '<p class = \"nothing-found\"> <b> No information found in VirusTotal. </p>'}function setFirstItemData(){const firstKey=entitiesData.keys().next().value; setContent(firstKey); setActiveItem(listElement.children[0]);}function setActiveItem(item){activeItem=item; activeItem.classList.add('active');}function isEmptyArray(arr){return !arr || !arr.length || arr.length===0;} </script> </body></html>",
        "htmlHeight": 400,
        "safeRendering": false,
        "type": 3,
        "widgetDefinitionScope": 2
    },
    "conditionsGroup": {
        "conditions": [
            {
                "value": "true",
                "fieldName": "[{stepInstanceName}.is_success]",
                "matchType": 0
            }
        ],
        "logicalOperator": 0
    },
    "defaultSize": 1
}
