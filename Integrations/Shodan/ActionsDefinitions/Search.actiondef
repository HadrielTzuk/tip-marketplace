{
    "CreationTimeUnixTimeInMs": 1545759667306,
    "Creator": "Admin",
    "Description": "Search the SHODAN database.",
    "DynamicResultsMetadata": [
        {
            "ResultExample": "{\"matches\": [{\"timestamp\": \"2014-01-15T05: 49: 56.283713\", \"isp\": \"Vivacom\", \"data\": \"@PJL INFO STATUS CODE=35078 DISPLAY=Power Saver ONLINE=TRUE\", \"port\": 9100, \"hostnames\": [], \"location\": {\"city\": null, \"region_code\": null, \"area_code\": null, \"longitude\": 25, \"country_code3\": \"BGR\", \"country_name\": \"Bulgaria\", \"postal_code\": null, \"dma_code\": null, \"country_code\": \"BG\", \"latitude\": 43}, \"ip\": 3579573318, \"domains\": [], \"org\": \"Vivacom\", \"os\": null, \"asn\": \"AS8866\", \"ip_str\": \"1.1.1.1\"}], \"facets\": {\"org\": [{\"count\": 107, \"value\": \"UniversityofMinnesota\"}]}, \"total\": 12039}",
            "ResultName": "JsonResult"
        }
    ],
    "Id": -1,
    "IntegrationIdentifier": "Shodan",
    "IsCustom": false,
    "IsEnabled": true,
    "ModificationTimeUnixTimeInMs": 1545759667313,
    "Name": "Search",
    "Parameters": [
        {
            "CreationTimeUnixTimeInMs": 1545759667327,
            "CustomActionId": 60,
            "DefaultValue": "",
            "Description": "Search query; identical syntax to the website. e.g. find Apache webservers located in Germany(apache country:'DE', city:'Berlin')",
            "Id": -1,
            "IsMandatory": true,
            "ModificationTimeUnixTimeInMs": 1545759667327,
            "Name": "Search Query",
            "Type": 0,
            "Value": ""
        },
        {
            "CreationTimeUnixTimeInMs": 1545759667330,
            "CustomActionId": 60,
            "DefaultValue": "",
            "Description": "A comma-separated list of properties to get summary information on. Property names can also be in the format of 'property:count'. (i.e. country:100, city:5). More information can be found at https://developer.shodan.io/api ",
            "Id": -1,
            "IsMandatory": false,
            "ModificationTimeUnixTimeInMs": 1545759667330,
            "Name": "Facets",
            "Type": 0,
            "Value": ""
        },
        {
            "CreationTimeUnixTimeInMs": 1545759667330,
            "CustomActionId": 60,
            "DefaultValue": "false",
            "Description": "Whether to minify the banner and only return the important data",
            "Id": -1,
            "IsMandatory": false,
            "ModificationTimeUnixTimeInMs": 1545759667330,
            "Name": "Set Minify",
            "Type": 1,
            "Value": "false"
        }
    ],
    "Script": "from ShodanManager import ShodanManager\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import flat_dict_to_csv, dict_to_flat\n\n\ndef main():\n    siemplify = SiemplifyAction()\n\n    conf = siemplify.get_configuration('Shodan')\n    verify_ssl = conf.get('Verify SSL', 'False').lower() == 'true'\n    api_key = conf.get('API key', \"\")\n    shodan = ShodanManager(api_key, verify_ssl=verify_ssl)\n\n    # Parameters:\n    query = siemplify.parameters['Search Query']\n    minify = siemplify.parameters.get(\"Set Minify\", \"False\").lower() == 'true'\n    facets = siemplify.parameters.get(\"Facets\", \"\")\n    page = int(siemplify.parameters.get(\"Page\", 1))\n\n    search_res = shodan.search(query, facets=facets, page=page, minify=minify)\n\n    if search_res:\n        # Add csv table\n        flat_report = dict_to_flat(search_res)\n        siemplify.result.add_data_table(\"Search Results:\", flat_dict_to_csv(flat_report))\n        output_message = \"Successfully search the SHODAN database\"\n        result_value = 'true'\n    else:\n        output_message = \"Failed to search the SHODAN database\"\n        result_value = 'false'\n\n    siemplify.end(output_message, result_value)\n\n\nif __name__ == '__main__':\n    main()\n",
    "ScriptResultName": "is_success",
    "Version": 2.0,
    "SimulationDataJson": "{\"Entities\": []}"
}