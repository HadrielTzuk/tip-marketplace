{
    "CreationTimeUnixTimeInMs": 1532523450563, 
    "Creator": "Admin", 
    "Description": "Retrieve all breaches an account has been involved in and public \"pastes\" an account was found in", 
    "DynamicResultsMetadata": [
        {
            "ResultExample": "[{\"EntityResult\": {\"breaches\": [{\"PwnCount\": 37217682, \"IsRetired\": false, \"Description\": \"In March 2012, the music website <a href=\\\"https://techcrunch.com/2016/09/01/43-million-passwords-hacked-in-last-fm-breach/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Last.fm was hacked</a> and 43 million user accounts were exposed. Whilst <a href=\\\"http://www.last.fm/passwordsecurity\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Last.fm knew of an incident back in 2012</a>, the scale of the hack was not known until the data was released publicly in September 2016. The breach included 37 million unique email addresses, usernames and passwords stored as unsalted MD5 hashes.\", \"DataClasses\": [\"Email addresses\", \"Passwords\", \"Usernames\"], \"IsSensitive\": false, \"Domain\": \"last.fm\", \"IsSpamList\": false, \"BreachDate\": \"2012-03-22\", \"IsFabricated\": false, \"ModifiedDate\": \"2016-09-20T20:00:49Z\", \"Title\": \"Last.fm\", \"Name\": \"Lastfm\", \"AddedDate\": \"2016-09-20T20:00:49Z\", \"IsVerified\": true, \"LogoPath\": \"https://haveibeenpwned.com/Content/Images/PwnedLogos/Lastfm.png\"}], \"pastes\": [{\"Date\": null, \"Source\": \"AdHocUrl\", \"EmailCount\": 36959, \"Id\": \"http://siph0n.in/exploits.php?id=1\", \"Title\": \"BuzzMachines.com 40k+\"}]}, \"Entity\": \"john_doe@example.com\"}]", 
            "ResultName": "JsonResult"
        }
    ], 
    "Id": -1, 
    "IntegrationIdentifier": "HaveIBeenPwned", 
    "IsCustom": false, 
    "IsEnabled": true, 
    "ModificationTimeUnixTimeInMs": 1532523450563, 
    "Name": "Check Account", 
    "Parameters": [], 
    "Script": "from HaveIBeenPwnedManager import HaveIBeenPwnedManager\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyDataModel import EntityTypes\nimport json\nfrom SiemplifyUtils import construct_csv\n\nSCRIPT_NAME = \"HaveIBeenPwned - CheckAccount\"\n\n\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n    conf = siemplify.get_configuration('HaveIBeenPwned')\n    use_ssl = conf.get('Verify SSL', 'False').lower() == 'true'\n    hibp_manager = HaveIBeenPwnedManager(use_ssl=use_ssl)\n\n    pwned_entities =[]\n    breaches = {}\n    breaches_construct_list = []\n    pastes_construct_list = []\n\n    for entity in siemplify.target_entities:\n        if entity.entity_type == EntityTypes.USER:\n            try:\n                account_breaches = hibp_manager.get_all_breaches_for_an_account(entity.identifier.lower())\n                if account_breaches:\n                    for breach in account_breaches:\n                        breaches.update(breach)\n                        breaches_construct_list.append({'Domain': breach['Domain'], 'BreachDate': breach['BreachDate']})\n                    siemplify.result.add_json('Breaches {0} was Pwned in:'.format(entity.identifier), json.dumps(breaches))\n                    breaches_csv = construct_csv(breaches_construct_list)\n                    siemplify.result.add_data_table('Breaches', breaches_csv)\n\n                account_pastes = hibp_manager.get_all_pastes_for_an_account(entity.identifier)\n                if account_pastes:\n                    for paste in account_pastes:\n                        pastes_construct_list.append({'Title': paste['Title'], 'Date': paste['Date'], 'Emails': paste['EmailCount'], 'Source': paste['Source']})\n                        paste_link = '{0}/{1}'.format(paste['Source'], paste['Id'])\n                        paste_link_title = paste.get('Title') if paste.get('Title') else paste.get('Date')\n                        siemplify.result.add_link(paste_link_title, paste_link)\n                    pastes_csv = construct_csv(pastes_construct_list)\n                    siemplify.result.add_data_table('Pastes {0} was found in'.format(entity.identifier), pastes_csv)\n\n                if account_breaches or account_pastes:\n                    siemplify.add_entity_insight(entity, 'Account have been pwned!', triggered_by='HaveIBeenPwned')\n                    pwned_entities.append(entity)\n\n            except Exception as e:\n                # An error occurred - skip entity and continue\n                siemplify.LOGGER.error(\"An error occurred on entity: {}.\\n{}.\".format(entity.identifier, str(e)))\n                siemplify.LOGGER._log.exception(e)\n\n    if pwned_entities:\n        output_message = \"The following entities were pwnrd. \\n{0}\".format(pwned_entities)\n        result_value = 'true'\n    else:\n        output_message = \"Good news! No pwnage found.\"\n        result_value = 'false'\n\n    siemplify.end(output_message, result_value)\n\n\nif __name__ == '__main__':\n    main()\n", 
    "ScriptResultName": "pwned_emails", 
    "SimulationDataJson": "{\"Entities\": [\"USERUNIQNAME\"]}", 
    "Version": 1.0
}