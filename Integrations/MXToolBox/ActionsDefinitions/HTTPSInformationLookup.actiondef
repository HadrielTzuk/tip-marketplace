{
    "CreationTimeUnixTimeInMs": 1532526697196, 
    "Creator": "admin", 
    "Description": "The HTTPS Lookup and SSL Certificate Checker will query a website URL and tell you if it responds securely with SSL encryption", 
    "DynamicResultsMetadata": [
        {
            "ResultExample": "{}", 
            "ResultName": "JsonResult"
        }
    ], 
    "Id": -1, 
    "IntegrationIdentifier": "MXToolBox", 
    "IsCustom": false, 
    "IsEnabled": true, 
    "ModificationTimeUnixTimeInMs": 1532526697196, 
    "Name": "HTTPS Information Lookup", 
    "Parameters": [], 
    "Script": "from SiemplifyDataModel import EntityTypes\nfrom SiemplifyAction import SiemplifyAction\nfrom MXToolBoxManager import MXToolBoxManager\nfrom SiemplifyUtils import dict_to_flat, construct_csv\n\nMXTOOLBOX_PROVIDER = 'MXToolBox'\nSCRIPT_NAME = 'MXToolBox_HTTPS_Lookup'\n\n\ndef main():\n    # Configurations.\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n    conf = siemplify.get_configuration(MXTOOLBOX_PROVIDER)\n    verify_ssl = True if conf['Verify SSL'] == 'true' else False\n    mx_tool_box_manager = MXToolBoxManager(conf['API Root'], conf['API Key'], verify_ssl)\n\n    # Variables.\n    errors = []\n    success_entities = []\n    result_value = False\n\n    domain_entities = [entity for entity in siemplify.target_entities if entity.entity_type == EntityTypes.HOSTNAME]\n\n    for domain_entity in domain_entities:\n        try:\n            result = mx_tool_box_manager.domain_https_lookup(domain_entity.identifier)\n            if result:\n                success_entities.append(domain_entity)\n                result_value = True\n                result = map(dict_to_flat, result)\n                siemplify.result.add_entity_table(domain_entity.identifier, construct_csv(result))\n        except Exception as err:\n            error_message = 'Error fetching HTTPS lookup data for \"{0}\", ERROR: {1}'.format(domain_entity.identifier,\n                                                                                           unicode(err))\n            errors.append(error_message)\n            siemplify.LOGGER.error(error_message)\n            siemplify.LOGGER.exception(err)\n\n    if result_value:\n        output_message = \"Found results for: {0}\".format(\",\".join([entity.identifier for entity in success_entities]))\n    else:\n        output_message = 'Not found data for target entities.'\n\n    if errors:\n        output_message = \"{0}  \\n \\n {1}\".format(output_message, \" \\n \".join(errors))\n\n    siemplify.end(output_message, result_value)\n\n\nif __name__ == '__main__':\n    main()\n", 
    "ScriptResultName": "https", 
    "SimulationDataJson": "{\"Entities\": [\"DestinationURL\"]}", 
    "Version": 1.0
}