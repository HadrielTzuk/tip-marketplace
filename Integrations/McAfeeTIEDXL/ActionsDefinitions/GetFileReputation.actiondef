{
    "CreationTimeUnixTimeInMs": 1527068045800, 
    "Creator": "admin", 
    "Description": "Get file reputation", 
    "DynamicResultsMetadata": [
        {
            "ResultExample": "[{\"EntityResult\": [{\"Verbose Trust level\": \"KNOWN_MALICIOUS\", \"First Contact\": \"2020-04-07 08:35:22 +00:00\", \"Verbose Provider\": \"Global Threat Intelligence (GTI)\", \"Provider ID\": 1, \"Trust Level\": \"1\"}, {\"Verbose Trust level\": \"NOT_SET\", \"First Contact\": \"2020-04-07 08:35:22 +00:00\", \"Verbose Provider\": \"McAfee Threat Intelligence Exchange\", \"Provider ID\": 3, \"Trust Level\": \"0\"}, {\"Verbose Trust level\": \"UNKNOWN\", \"First Contact\": \"2020-05-26 10:17:58 +00:00\", \"Verbose Provider\": \"Advanced Threat Defense (ATD)\", \"Provider ID\": 5, \"Trust Level\": \"50\"}], \"Entity\": \"275A021BBFB6489E54D471899F7DB9D1663FC695EC2FE2A2C4538AABF651FD0F\"}]", 
            "ResultName": "JsonResult"
        }
    ], 
    "Id": -1, 
    "IntegrationIdentifier": "McAfeeTIEDXL", 
    "IsCustom": false, 
    "IsEnabled": true, 
    "ModificationTimeUnixTimeInMs": 1527068045800, 
    "Name": "Get File Reputation", 
    "Parameters": [        {
            "CreationTimeUnixTimeInMs": 1527069415680, 
            "CustomActionId": -1, 
            "DefaultValue": "False", 
            "Description": "If checked, enrich with all results from all returned services. Else, store only the worst reputation as enrichment.", 
            "Id": -1, 
            "IsMandatory": false, 
            "ModificationTimeUnixTimeInMs": 1527069415680, 
            "Name": "Enrich with all services", 
            "Type": 1, 
            "Value": "False"
        }
    ], 
    "Script": "from SiemplifyDataModel import EntityTypes\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import dict_to_flat, add_prefix_to_dict_keys\nfrom McAfeeTIEDXLManager import McAfeeTIEDXLManager\n\nSCRIPT_NAME = \"Mcafee TIE & DXL - GetFileReputation\"\n\n\ndef main():\n    siemplify = SiemplifyAction()\n    conf = siemplify.get_configuration('McAfeeTIEDXL')\n    siemplify.script_name = SCRIPT_NAME\n    server_addr = conf[\"Server Address\"]\n    broker_ca_bundle_path = conf[\"Broker CA Bundle Path\"]\n    cert_file_path = conf[\"Client Cert File Path\"]\n    private_key_path = conf[\"Client Key File Path\"]\n\n    mcafee_dxl_manager = McAfeeTIEDXLManager(server_addr,\n                                      broker_ca_bundle_path,\n                                      cert_file_path,\n                                      private_key_path)\n\n    enriched_entities = []\n\n    for entity in siemplify.target_entities:\n        if entity.entity_type == EntityTypes.FILEHASH:\n            try:\n                reputations = mcafee_dxl_manager.get_file_reputation(\n                    entity.identifier)\n\n                if reputations:\n                    # Attach reputations as csv\n                    csv_output = mcafee_dxl_manager.construct_csv(reputations)\n                    siemplify.result.add_entity_table(\n                        \"Reputations - {}\".format(entity.identifier),\n                        csv_output)\n\n                    # Get the worst trust level reputation and enrich entity with it\n                    worst_reputation = mcafee_dxl_manager.get_worst_trust_level(reputations)\n                    worst_reputation = dict_to_flat(worst_reputation)\n                    worst_reputation = add_prefix_to_dict_keys(worst_reputation, 'McAfee_TIE_DXL')\n\n                    entity.additional_properties.update(worst_reputation)\n                    entity.is_enriched = True\n\n                    enriched_entities.append(entity)\n\n            except Exception as e:\n                # An error occurred - skip entity and continue\n                siemplify.LOGGER.error(\n                    \"An error occurred on entity: {}.\\n{}.\".format(\n                        entity.identifier, str(e)\n                    ))\n                siemplify.LOGGER._log.exception(e)\n\n    if enriched_entities:\n        entities_names = [entity.identifier for entity in enriched_entities]\n\n        output_message = 'McAfee TIE: The following entities were enriched:\\n' + '\\n'.join(\n            entities_names)\n\n        siemplify.update_entities(enriched_entities)\n\n    else:\n        output_message = 'McAfee TIE: No entities were enriched.'\n\n    siemplify.end(output_message, True)\n\n\nif __name__ == '__main__':\n    main()\n", 
    "ScriptResultName": "is_success", 
    "SimulationDataJson": "{\"Entities\": [\"FILEHASH\"]}", 
    "Version": 1.0
}