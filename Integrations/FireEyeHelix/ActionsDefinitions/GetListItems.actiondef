{
    "CreationTimeUnixTimeInMs": 0,
    "Creator": "admin",
    "Description": "Return information about FireEye Helix lists items.",
    "DynamicResultsMetadata": [
        {
            "ResultExample": "[{\"id\": \"420xxxxxx\", \"value\": \"99.xx.x.x/16\", \"type\": \"misc\", \"risk\": \"Low\", \"notes\": \"\", \"list\": \"84xxx\"}, {\"id\": \"420xxxxxx\", \"value\": \"2600:xxxx:81xx::/48\", \"type\": \"misc\", \"risk\": \"Low\", \"notes\": \"\", \"list\": \"84xxx\"}]",
            "ResultName": "JsonResult"
        }
    ],
    "Id": -1,
    "IntegrationIdentifier": "FireEyeHelix",
    "IsCustom": false,
    "IsEnabled": true,
    "ModificationTimeUnixTimeInMs": 0,
    "Name": "Get List Items",
    "Parameters": [
        {
            "Name": "List Short Name",
            "Type": 0,
            "Value": "",
            "DefaultValue": "",
            "IsMandatory": true,
            "Description": "Specify the short name of the list.",
            "CustomActionId": -1,
            "Id": -1
        },
        {
            "Name": "Value",
            "Type": 0,
            "Value": "",
            "DefaultValue": "",
            "IsMandatory": false,
            "Description": "Specify value filter for the items.",
            "CustomActionId": -1,
            "Id": -1
        },
        {
            "Name": "Type",
            "Type": 15,
            "Value": "ALL",
            "DefaultValue": "ALL",
            "IsMandatory": false,
            "Description": "Specify type filter for the items.",
            "CustomActionId": -1,
            "Id": -1,
            "OptionalValues": [
                "ALL",
                "Email",
                "FQDN",
                "IPv4",
                "IPv6",
                "MD5",
                "MISC",
                "SHA-1"
            ]
        },
        {
            "Name": "Sort By",
            "Type": 15,
            "Value": "Value",
            "DefaultValue": "Value",
            "IsMandatory": false,
            "Description": "Specify which parameter should be used for sorting results.",
            "CustomActionId": -1,
            "Id": -1,
            "OptionalValues": [
                "Value",
                "Type"
            ]
        },
        {
            "Name": "Sort Order",
            "Type": 15,
            "Value": "Ascending",
            "DefaultValue": "Ascending",
            "IsMandatory": false,
            "Description": "Specify the sorting order for the results.",
            "CustomActionId": -1,
            "Id": -1,
            "OptionalValues": [
                "Ascending",
                "Descending"
            ]
        },
        {
            "Name": "Max Items To Return",
            "Type": 0,
            "Value": 100,
            "DefaultValue": 100,
            "IsMandatory": false,
            "Description": "Specify how many items to return.",
            "CustomActionId": -1,
            "Id": -1
        }
    ],
    "ScriptResultName": "is_success",
    "Type": 0,
    "Version": 1.0,
    "SimulationDataJson": "{\"Entities\":[]}"
}