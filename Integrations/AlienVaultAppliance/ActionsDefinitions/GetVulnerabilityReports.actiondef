{
    "CreationTimeUnixTimeInMs": 1533119453731,
    "Creator": "Admin",
    "Description": "Get environment vulnerability report files",
    "DynamicResultsMetadata": [
        {
            "ResultExample": "[{\"creation_time\": \"2014-02-26 02:08:59\", \"download_link\": \"https://www.alienvault.com/ossim/vulnmeter/lr_rescsv.php?treport=latest&ipl=1.1.1.1&ctx=C22835597DE0AF71A09DF3B&scantype=M\", \"Address\": \"Helium (1.1.1.1)\"}, {\"creation_time\": \"2014-02-26 02:08:59\", \"download_link\": \"https://www.alienvault.com/ossim/vulnmeter/lr_rescsv.php?treport=latest&ipl=1.1.1.1&ctx=C228351E697DE071A09DF3B&scantype=M\", \"Address\": \"Holmium (1.1.1.1)\"}, {\"creation_time\": \"2014-02-26 02:08:59\", \"download_link\": \"https://www.alienvault.com/ossim/vulnmeter/lr_rescsv.php?treport=latest&ipl=1.1.1.1&ctx=C22835597DE0AF71A09DF3B&scantype=M\", \"Address\": \"Indium (1.1.1.1)\"}]",
            "ResultName": "JsonResult"
        }
    ],
    "Id": -1,
    "IntegrationIdentifier": "AlienVaultAppliance",
    "IsCustom": false,
    "IsEnabled": true,
    "ModificationTimeUnixTimeInMs": 1533119453731,
    "Name": "Get Vulnerability Reports",
    "Parameters": [
        {
            "CreationTimeUnixTimeInMs": 1533119453731,
            "CustomActionId": -1,
            "DefaultValue": "",
            "Description": "e.g. 10",
            "Id": -1,
            "IsMandatory": true,
            "ModificationTimeUnixTimeInMs": 1533119453731,
            "Name": "Number Of Files To Fetch",
            "Type": 0,
            "Value": ""
        }
    ],
    "Script": "from SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import construct_csv\nfrom AlienVaultManager import AlienVaultManager, AlienVaultManagerError\nimport base64\n\nPROVIDER = 'AlienVaultAppliance'\nTABLE_NAME = 'Vulnerability Report Files'\n\n\ndef main():\n    siemplify = SiemplifyAction()\n    configurations = siemplify.get_configuration(PROVIDER)\n    server_address = configurations['Api Root']\n    username = configurations['Username']\n    password = configurations['Password']\n\n    result_value = False\n\n    # Parameters\n    number_of_files_to_fetch = int(siemplify.parameters.get('Number Of Files To Fetch', 1))\n\n    alienvault_manager = AlienVaultManager(server_address, username, password)\n\n    # Get pcap files records.\n    vuln_reports = alienvault_manager.get_vulnerability_reports()\n\n    for vuln_report in vuln_reports[:number_of_files_to_fetch]:\n        # Fetch file content.\n        file_content = alienvault_manager.download_file_from_link(vuln_report.get('download_link'),\n                                           vuln_report.get('sensor_ip'))\n\n        siemplify.result.add_attachment(vuln_report.get('Address'),\n                                        vuln_report.get('Address'),\n                                        base64.b64encode(file_content))\n\n    if vuln_reports:\n        siemplify.result.add_data_table(TABLE_NAME, construct_csv(vuln_reports[:number_of_files_to_fetch]))\n        result_value = True\n        output_message = 'Found {0} vulnerability report files.'.format(len(vuln_reports[:number_of_files_to_fetch]))\n    else:\n        output_message = 'No vulnerability report files were found.'\n\n    siemplify.end(output_message, result_value)\n\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\n\n",
    "ScriptResultName": "is_success",
    "Version": 1.0,
    "SimulationDataJson": "{\"Entities\": []}"
}